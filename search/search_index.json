{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Constellation Backend API Documentation","text":"<p>Welcome to the Constellation Backend API documentation. This documentation provides detailed information about the various API endpoints available in the Constellation project.</p>"},{"location":"#table-of-contents","title":"Table of Contents","text":""},{"location":"#neo4j-api-endpoints","title":"Neo4j API Endpoints","text":"<ul> <li>Nodes API</li> <li>Links API</li> <li>Search API</li> <li>Neo4j Debug API</li> </ul>"},{"location":"#postgres-api-endpoints","title":"Postgres API Endpoints","text":"<ul> <li>Users API</li> <li>Files and Folders API</li> <li>Images API</li> <li>Comments API</li> <li>Constellations API</li> <li>Structure API</li> <li>Postgres Debug API</li> </ul>"},{"location":"#sse-api-endpoints","title":"SSE API Endpoints","text":""},{"location":"#crdt-server","title":"CRDT Server","text":"<ul> <li>CRDT Server</li> </ul> <p>Each section contains detailed information about the request parameters, request body, response, and response examples for the respective API endpoints.</p>"},{"location":"#getting-started","title":"Getting Started","text":"<p>To get started with the Constellation Backend API, you will need to have the following:</p> <ul> <li>An API key or access token for authentication.</li> <li>The base URL for the API endpoints.</li> </ul>"},{"location":"#authentication","title":"Authentication","text":"<p>All API requests require authentication using a JWT token. You can obtain a token by logging in with your credentials.</p>"},{"location":"#error-handling","title":"Error Handling","text":"<p>The API uses standard HTTP status codes to indicate the success or failure of an API request. Common status codes include:</p> <ul> <li><code>200 OK</code>: The request was successful.</li> <li><code>201 Created</code>: The resource was successfully created.</li> <li><code>400 Bad Request</code>: The request was invalid or cannot be served.</li> <li><code>401 Unauthorized</code>: Authentication failed or user does not have permissions for the requested operation.</li> <li><code>403 Forbidden</code>: Authentication succeeded but authenticated user does not have access to the requested resource.</li> <li><code>404 Not Found</code>: The requested resource could not be found.</li> <li><code>500 Internal Server Error</code>: An error occurred on the server.</li> </ul> <p>For more detailed information about each API endpoint, please refer to the respective sections in the Table of Contents.</p>"},{"location":"crdt_server/overview/","title":"CRDT Server Overview","text":"<p>This document provides an overview of how to use the CRDT server in the Constellation project.</p>"},{"location":"crdt_server/overview/#information","title":"Information","text":"<p>The CRDT server uses hocuspocus for real-time collaboration and synchronization.</p> <p>The CRDT Server was made to be used with the platejs library, which provides a rich text editor with collaborative features and manages the Yjs documents internally.</p> <p>For more information on how to use the CRDT server, you can refer to the hocuspocus documentation and the platejs documentation.</p>"},{"location":"crdt_server/overview/#how-to-use-the-crdt-server","title":"How to use the CRDT server","text":"<p>To use the CRDT server, follow these steps:</p> <ol> <li>Start the CRDT server: The CRDT server is a separate service that needs to be started before you can use it. You can start the server by starting the docker compose file located at the root of the project. The command to start the server is:</li> </ol> <pre><code> docker compose up --build\n</code></pre> <ol> <li>Set the room name: The CRDT server uses rooms to organize data. You need to set the room name before you can use the server. You can set the room name using the following code:</li> </ol> <pre><code> // The room name should be formed as: postgres/&lt;constellation_uuid&gt;/&lt;file_uuid&gt; or neo4j/&lt;constellation_uuid&gt;/&lt;node_uuid&gt;/&lt;attribute_name&gt;\n// For example, if you are using PostgreSQL and your constellation UUID is \"1234\" and your file UUID is \"5678\", the room name would be:\nconst roomname = `postgres/1234/5678`\n// If you are using Neo4j and your constellation UUID is \"1234\", your node UUID is \"5678\", and your attribute name is \"story\", the room name would be:\nconst roomname = `neo4j/1234/5678/story`\n</code></pre> <ol> <li>Set the JWT token: The CRDT server requires a JWT token to authenticate the user. You can set the JWT token in the providers options when using platejs.</li> </ol> <pre><code>   const jwt = // get the JWT token from your authentication system\n\n// In the patejs configuration, you can set the JWT token like this in the providers array:\nproviders: [\n{\ntype: 'hocuspocus',\noptions: {\nname: roomname,\nurl: 'ws://localhost:8003', // use the public ws server\ntoken: jwt,\n}\n}\n]\n</code></pre>"},{"location":"database_schema/overview/","title":"Database Schema","text":"<p>The database schema for the Constellation project consists of six tables: Users, Constellations, Files, Images, User_Constellation, and Comments. Each table has its own set of columns and relationships with other tables. This document provides an overview of the database schema, including the tables, columns, relationships, and indexes.</p>"},{"location":"database_schema/overview/#tables","title":"Tables","text":""},{"location":"database_schema/overview/#users-table","title":"Users Table","text":"<p>The Users table stores information about the users of the Constellation project. It contains the following columns:</p> <ul> <li><code>uuid</code>: The unique identifier for each user.</li> <li><code>name</code>: The name of the user.</li> <li><code>email</code>: The email address of the user.</li> <li><code>password</code>: The hashed password of the user.</li> <li><code>created_at</code>: The timestamp when the user was created.</li> <li><code>last_login</code>: The timestamp of the user's last login.</li> </ul>"},{"location":"database_schema/overview/#constellations-table","title":"Constellations Table","text":"<p>The Constellations table stores information about the constellations created by users. It contains the following columns:</p> <ul> <li><code>uuid</code>: The unique identifier for each constellation.</li> <li><code>name</code>: The name of the constellation.</li> <li><code>description</code>: The description of the constellation.</li> <li><code>root_folder_uuid</code>: The unique identifier of the root folder of the constellation.</li> <li><code>created_at</code>: The timestamp when the constellation was created.</li> </ul>"},{"location":"database_schema/overview/#files-table","title":"Files Table","text":"<p>The Files table stores information about the files uploaded by users. It contains the following columns:</p> <ul> <li><code>uuid</code>: The unique identifier for each file.</li> <li><code>name</code>: The name of the file.</li> <li><code>path</code>: The path to the file on the server.</li> <li><code>type</code>: The type of the file ('FILE' or 'FOLDER').</li> <li><code>creator_uuid</code>: The unique identifier of the user who uploaded the file.</li> <li><code>created_at</code>: The timestamp when the file was uploaded.</li> <li><code>last_editor_uuid</code>: The unique identifier of the user who last edited the file.</li> <li><code>last_modification</code>: The timestamp of the file's last edit.</li> <li><code>constellation_uuid</code>: The unique identifier of the constellation to which the file belongs.</li> </ul>"},{"location":"database_schema/overview/#images-table","title":"Images Table","text":"<p>The Images table stores information about the images uploaded by users. It contains the following columns:</p> <ul> <li><code>uuid</code>: The unique identifier for each image.</li> <li><code>name</code>: The name of the image.</li> <li><code>creator_uuid</code>: The unique identifier of the user who uploaded the image.</li> <li><code>created_at</code>: The timestamp when the image was uploaded.</li> <li><code>constellation_uuid</code>: The unique identifier of the constellation to which the image belongs.</li> </ul>"},{"location":"database_schema/overview/#user_constellation-table","title":"User_Constellation Table","text":"<p>The User_Constellation table stores information about the users who have access to constellations. It contains the following columns:</p> <ul> <li><code>user_uuid</code>: The unique identifier of the user.</li> <li><code>constellation_uuid</code>: The unique identifier of the constellation.</li> <li><code>rights</code>: The rights the user has on the constellation. See the Rights for more information.</li> </ul>"},{"location":"database_schema/overview/#comments-table","title":"Comments Table","text":"<p>The Comments table stores information about the comments made by users on constellations and files. It contains the following columns:</p> <ul> <li><code>uuid</code>: The unique identifier for each comment.</li> <li><code>content</code>: The content of the comment.</li> <li><code>creator_uuid</code>: The unique identifier of the user who made the comment.</li> <li><code>created_at</code>: The timestamp when the comment was made.</li> <li><code>file_uuid</code>: The unique identifier of the file on which the comment was made.</li> <li><code>parent_uuid</code>: The unique identifier of the comment parent (if it is a reply).</li> </ul>"},{"location":"database_schema/tables/comments/","title":"Comments Table","text":"<p>The Comments table stores information about the comments made by users on constellations and files. It contains the following columns:</p> <ul> <li><code>uuid</code>: The unique identifier for each comment.</li> <li><code>content</code>: The content of the comment.</li> <li><code>creator_uuid</code>: The unique identifier of the user who made the comment.</li> <li><code>created_at</code>: The timestamp when the comment was made.</li> <li><code>file_uuid</code>: The unique identifier of the file on which the comment was made.</li> <li><code>parent_uuid</code>: The unique identifier of the comment parent (if it is a reply).</li> </ul>"},{"location":"database_schema/tables/comments/#columns","title":"Columns","text":""},{"location":"database_schema/tables/comments/#uuid","title":"uuid","text":"<ul> <li>Type: UUID</li> <li>Description: The unique identifier for each comment.</li> <li>Example: <code>123e4567-e89b-12d3-a456-426614174000</code></li> </ul>"},{"location":"database_schema/tables/comments/#content","title":"content","text":"<ul> <li>Type: Text</li> <li>Description: The content of the comment.</li> <li>Example: <code>This is a comment.</code></li> </ul>"},{"location":"database_schema/tables/comments/#creator_uuid","title":"creator_uuid","text":"<ul> <li>Type: UUID</li> <li>Description: The unique identifier of the user who made the comment.</li> <li>Example: <code>123e4567-e89b-12d3-a456-426614174001</code></li> </ul>"},{"location":"database_schema/tables/comments/#created_at","title":"created_at","text":"<ul> <li>Type: Timestamp</li> <li>Description: The timestamp when the comment was made.</li> <li>Example: <code>2023-10-01 12:34:56</code></li> </ul>"},{"location":"database_schema/tables/comments/#file_uuid","title":"file_uuid","text":"<ul> <li>Type: UUID</li> <li>Description: The unique identifier of the file on which the comment was made.</li> <li>Example: <code>123e4567-e89b-12d3-a456-426614174002</code></li> </ul>"},{"location":"database_schema/tables/comments/#parent_uuid","title":"parent_uuid","text":"<ul> <li>Type: UUID</li> <li>Description: The unique identifier of the comment parent (if it is a reply).</li> <li>Example: <code>123e4567-e89b-12d3-a456-426614174003</code></li> </ul>"},{"location":"database_schema/tables/comments/#relationships","title":"Relationships","text":"<ul> <li>creator_uuid: Foreign key referencing the <code>uuid</code> column in the <code>Users</code> table.</li> <li>file_uuid: Foreign key referencing the <code>uuid</code> column in the <code>Files</code> table.</li> <li>parent_uuid: Foreign key referencing the <code>uuid</code> column in the <code>Comments</code> table (if it is a reply).</li> </ul>"},{"location":"database_schema/tables/comments/#indexes","title":"Indexes","text":"<ul> <li>Primary Key: <code>uuid</code></li> <li>Foreign Key: <code>creator_uuid</code> references <code>Users(uuid)</code></li> <li>Foreign Key: <code>file_uuid</code> references <code>Files(uuid)</code></li> <li>Foreign Key: <code>parent_uuid</code> references <code>Comments(uuid)</code></li> </ul> <p>This table is used to store metadata about comments made by users, including the user who made the comment, the file on which the comment was made, and any parent comment if it is a reply.</p>"},{"location":"database_schema/tables/constellations/","title":"Constellations Table","text":"<p>The Constellations table stores information about the constellations created by users. It contains the following columns:</p> <ul> <li><code>uuid</code>: The unique identifier for each constellation.</li> <li><code>name</code>: The name of the constellation.</li> <li><code>description</code>: The description of the constellation.</li> <li><code>root_folder_uuid</code>: The unique identifier of the root folder of the constellation.</li> <li><code>created_at</code>: The timestamp when the constellation was created.</li> </ul>"},{"location":"database_schema/tables/constellations/#columns","title":"Columns","text":""},{"location":"database_schema/tables/constellations/#uuid","title":"uuid","text":"<ul> <li>Type: UUID</li> <li>Description: The unique identifier for each constellation.</li> <li>Example: <code>123e4567-e89b-12d3-a456-426614174000</code></li> </ul>"},{"location":"database_schema/tables/constellations/#name","title":"name","text":"<ul> <li>Type: String</li> <li>Description: The name of the constellation.</li> <li>Example: <code>Orion</code></li> </ul>"},{"location":"database_schema/tables/constellations/#description","title":"description","text":"<ul> <li>Type: Text</li> <li>Description: The description of the constellation.</li> <li>Example: <code>A prominent constellation located on the celestial equator and visible throughout the world.</code></li> </ul>"},{"location":"database_schema/tables/constellations/#root_folder_uuid","title":"root_folder_uuid","text":"<ul> <li>Type: UUID</li> <li>Description: The unique identifier of the root folder of the constellation.</li> <li>Example: <code>456e7890-e12b-34d5-a678-426614174001</code></li> </ul>"},{"location":"database_schema/tables/constellations/#created_at","title":"created_at","text":"<ul> <li>Type: Timestamp</li> <li>Description: The timestamp when the constellation was created.</li> <li>Example: <code>2023-10-01 12:34:56</code></li> </ul>"},{"location":"database_schema/tables/constellations/#relationships","title":"Relationships","text":"<ul> <li>root_folder_uuid: Foreign key referencing the <code>uuid</code> column in the <code>Files</code> table.</li> </ul>"},{"location":"database_schema/tables/constellations/#indexes","title":"Indexes","text":"<ul> <li>Primary Key: <code>uuid</code></li> <li>Foreign Key: <code>root_folder_uuid</code> references <code>Files(uuid)</code></li> </ul> <p>This table is used to store metadata about constellations created by users, including the unique identifier, name, description, root folder, and creation timestamp.</p>"},{"location":"database_schema/tables/files/","title":"Files Table","text":"<p>The Files table stores information about the files uploaded by users. It contains the following columns:</p> <ul> <li><code>uuid</code>: The unique identifier for each file.</li> <li><code>name</code>: The name of the file.</li> <li><code>path</code>: The path to the file on the server.</li> <li><code>type</code>: The type of the file ('FILE' or 'FOLDER').</li> <li><code>creator_uuid</code>: The unique identifier of the user who uploaded the file.</li> <li><code>created_at</code>: The timestamp when the file was uploaded.</li> <li><code>last_editor_uuid</code>: The unique identifier of the user who last edited the file.</li> <li><code>last_modification</code>: The timestamp of the file's last edit.</li> <li><code>constellation_uuid</code>: The unique identifier of the constellation to which the file belongs.</li> </ul>"},{"location":"database_schema/tables/files/#columns","title":"Columns","text":""},{"location":"database_schema/tables/files/#uuid","title":"uuid","text":"<ul> <li>Type: UUID</li> <li>Description: The unique identifier for each file.</li> <li>Example: <code>789e0123-e45b-67d8-a901-234567890123</code></li> </ul>"},{"location":"database_schema/tables/files/#name","title":"name","text":"<ul> <li>Type: String</li> <li>Description: The name of the file.</li> <li>Example: <code>document.txt</code></li> </ul>"},{"location":"database_schema/tables/files/#path","title":"path","text":"<ul> <li>Type: String</li> <li>Description: The path to the file on the server.</li> <li>Example: <code>/uploads/documents/document.txt</code></li> </ul>"},{"location":"database_schema/tables/files/#type","title":"type","text":"<ul> <li>Type: String</li> <li>Description: The type of the file ('FILE' or 'FOLDER').</li> <li>Example: <code>FILE</code></li> </ul>"},{"location":"database_schema/tables/files/#creator_uuid","title":"creator_uuid","text":"<ul> <li>Type: UUID</li> <li>Description: The unique identifier of the user who uploaded the file.</li> <li>Example: <code>123e4567-e89b-12d3-a456-426614174000</code></li> </ul>"},{"location":"database_schema/tables/files/#created_at","title":"created_at","text":"<ul> <li>Type: Timestamp</li> <li>Description: The timestamp when the file was uploaded.</li> <li>Example: <code>2023-10-01 12:34:56</code></li> </ul>"},{"location":"database_schema/tables/files/#last_editor_uuid","title":"last_editor_uuid","text":"<ul> <li>Type: UUID</li> <li>Description: The unique identifier of the user who last edited the file.</li> <li>Example: <code>234e5678-e90b-23d4-b567-567890123456</code></li> </ul>"},{"location":"database_schema/tables/files/#last_modification","title":"last_modification","text":"<ul> <li>Type: Timestamp</li> <li>Description: The timestamp of the file's last edit.</li> <li>Example: <code>2023-10-10 08:22:33</code></li> </ul>"},{"location":"database_schema/tables/files/#constellation_uuid","title":"constellation_uuid","text":"<ul> <li>Type: UUID</li> <li>Description: The unique identifier of the constellation to which the file belongs.</li> <li>Example: <code>345e6789-e01b-34d5-c678-678901234567</code></li> </ul>"},{"location":"database_schema/tables/files/#relationships","title":"Relationships","text":"<ul> <li>creator_uuid: Foreign key referencing the <code>uuid</code> column in the <code>Users</code> table.</li> <li>last_editor_uuid: Foreign key referencing the <code>uuid</code> column in the <code>Users</code> table.</li> <li>constellation_uuid: Foreign key referencing the <code>uuid</code> column in the <code>Constellations</code> table.</li> </ul>"},{"location":"database_schema/tables/files/#indexes","title":"Indexes","text":"<ul> <li>Primary Key: <code>uuid</code></li> <li>Foreign Key: <code>creator_uuid</code> references <code>Users(uuid)</code></li> <li>Foreign Key: <code>last_editor_uuid</code> references <code>Users(uuid)</code></li> <li>Foreign Key: <code>constellation_uuid</code> references <code>Constellations(uuid)</code></li> </ul> <p>This table is used to store metadata about files uploaded by users, including the user who uploaded the file, the user who last edited the file, and the constellation to which the file belongs.</p>"},{"location":"database_schema/tables/images/","title":"Images Table","text":"<p>The Images table stores information about the images uploaded by users. It contains the following columns:</p> <ul> <li><code>uuid</code>: The unique identifier for each image.</li> <li><code>name</code>: The name of the image.</li> <li><code>creator_uuid</code>: The unique identifier of the user who uploaded the image.</li> <li><code>created_at</code>: The timestamp when the image was uploaded.</li> <li><code>constellation_uuid</code>: The unique identifier of the constellation to which the image belongs.</li> </ul>"},{"location":"database_schema/tables/images/#columns","title":"Columns","text":""},{"location":"database_schema/tables/images/#uuid","title":"uuid","text":"<ul> <li>Type: UUID</li> <li>Description: The unique identifier for each image.</li> <li>Example: <code>567e8901-e23b-45d6-b789-890123456789</code></li> </ul>"},{"location":"database_schema/tables/images/#name","title":"name","text":"<ul> <li>Type: String</li> <li>Description: The name of the image.</li> <li>Example: <code>nebula.jpg</code></li> </ul>"},{"location":"database_schema/tables/images/#creator_uuid","title":"creator_uuid","text":"<ul> <li>Type: UUID</li> <li>Description: The unique identifier of the user who uploaded the image.</li> <li>Example: <code>123e4567-e89b-12d3-a456-426614174000</code></li> </ul>"},{"location":"database_schema/tables/images/#created_at","title":"created_at","text":"<ul> <li>Type: Timestamp</li> <li>Description: The timestamp when the image was uploaded.</li> <li>Example: <code>2023-10-01 12:34:56</code></li> </ul>"},{"location":"database_schema/tables/images/#constellation_uuid","title":"constellation_uuid","text":"<ul> <li>Type: UUID</li> <li>Description: The unique identifier of the constellation to which the image belongs.</li> <li>Example: <code>345e6789-e01b-34d5-c678-678901234567</code></li> </ul>"},{"location":"database_schema/tables/images/#relationships","title":"Relationships","text":"<ul> <li>creator_uuid: Foreign key referencing the <code>uuid</code> column in the <code>Users</code> table.</li> <li>constellation_uuid: Foreign key referencing the <code>uuid</code> column in the <code>Constellations</code> table.</li> </ul>"},{"location":"database_schema/tables/images/#indexes","title":"Indexes","text":"<ul> <li>Primary Key: <code>uuid</code></li> <li>Foreign Key: <code>creator_uuid</code> references <code>Users(uuid)</code></li> <li>Foreign Key: <code>constellation_uuid</code> references <code>Constellations(uuid)</code></li> </ul> <p>This table is used to store metadata about images uploaded by users, including the user who uploaded the image and the constellation to which the image belongs.</p>"},{"location":"database_schema/tables/users/","title":"Users Table","text":"<p>The Users table stores information about the users of the Constellation project. It contains the following columns:</p> <ul> <li><code>uuid</code>: The unique identifier for each user.</li> <li><code>name</code>: The name of the user.</li> <li><code>email</code>: The email address of the user.</li> <li><code>password</code>: The hashed password of the user.</li> <li><code>created_at</code>: The timestamp when the user was created.</li> <li><code>last_login</code>: The timestamp of the user's last login.</li> </ul>"},{"location":"database_schema/tables/users/#columns","title":"Columns","text":""},{"location":"database_schema/tables/users/#uuid","title":"uuid","text":"<ul> <li>Type: UUID</li> <li>Description: The unique identifier for each user.</li> <li>Example: <code>123e4567-e89b-12d3-a456-426614174000</code></li> </ul>"},{"location":"database_schema/tables/users/#name","title":"name","text":"<ul> <li>Type: String</li> <li>Description: The name of the user.</li> <li>Example: <code>John Doe</code></li> </ul>"},{"location":"database_schema/tables/users/#email","title":"email","text":"<ul> <li>Type: String</li> <li>Description: The email address of the user.</li> <li>Example: <code>john.doe@example.com</code></li> </ul>"},{"location":"database_schema/tables/users/#password","title":"password","text":"<ul> <li>Type: String</li> <li>Description: The hashed password of the user.</li> <li>Example: <code>$2a$12$EixZaYVK1fsbw1ZfbX3OXePaWxn96p36Zf4d8z6aPq3F3F3F3F3F3</code></li> </ul>"},{"location":"database_schema/tables/users/#created_at","title":"created_at","text":"<ul> <li>Type: Timestamp</li> <li>Description: The timestamp when the user was created.</li> <li>Example: <code>2023-10-01 12:34:56</code></li> </ul>"},{"location":"database_schema/tables/users/#last_login","title":"last_login","text":"<ul> <li>Type: Timestamp</li> <li>Description: The timestamp of the user's last login.</li> <li>Example: <code>2023-10-10 08:22:33</code></li> </ul>"},{"location":"database_schema/tables/users/#relationships","title":"Relationships","text":"<ul> <li>None</li> </ul>"},{"location":"database_schema/tables/users/#indexes","title":"Indexes","text":"<ul> <li>Primary Key: <code>uuid</code></li> <li>Unique: <code>email</code></li> </ul> <p>This table is used to store metadata about users, including their unique identifier, name, email address, hashed password, creation timestamp, and last login timestamp.</p>"},{"location":"deployment/github_actions/","title":"Documentation du d\u00e9ploiement automatique du Backend de Constellation par Github Actions","text":""},{"location":"deployment/github_actions/#prerequis","title":"Pr\u00e9requis","text":"<ul> <li>Un serveur distant (VPS, serveur d\u00e9di\u00e9, etc.) avec une distribution Linux (Ubuntu 20.04 LTS ou plus r\u00e9cent recommand\u00e9)</li> <li>Docker et Docker Compose install\u00e9s sur le serveur</li> <li>Git configur\u00e9 avec les permissions n\u00e9cessaires pour cloner et pull le repot</li> <li>Un utilisateur avec les droits sudo sans mot de passe (pour lancer les commandes Docker)</li> </ul>"},{"location":"deployment/github_actions/#github-action-pour-le-deploiement","title":"Github Action pour le d\u00e9ploiement","text":"<p>Le d\u00e9ploiement du backend de Constellation est automatis\u00e9 via Github Actions. La github action est d\u00e9finie dans le fichier <code>.github/workflows/deploy.yml</code> du repository.</p>"},{"location":"deployment/github_actions/#etapes-de-la-github-action","title":"\u00c9tapes de la Github Action","text":"<ol> <li>Cloner le repository sur le serveur distant (checkout)</li> <li>Mettre en place la cl\u00e9 SSH pour ce connecter au serveur distant (ssh-key r\u00e9cuper\u00e9e via les secrets de Github)</li> <li>Cr\u00e9er le fichier <code>.env</code> \u00e0 partir des secrets de Github puis le copier sur le serveur distant</li> <li>Copier le script de d\u00e9ploiement <code>deployBack.sh</code> sur le serveur distant</li> <li>Ex\u00e9cuter le script de d\u00e9ploiement</li> </ol>"},{"location":"deployment/github_actions/#secrets-de-github","title":"Secrets de Github","text":"<p>Pour que la Github Action fonctionne, il faut ajouter les secrets suivants dans les secrets du repository:</p> <ul> <li><code>secrets.DEPLOY_IP</code>: L'adresse IP du serveur distant</li> <li><code>secrets.DEPLOY_USER</code>: L'utilisateur pour se connecter au serveur distant</li> <li><code>secrets.EPITECH_REPO_SSH_KEY</code>: La cl\u00e9 SSH priv\u00e9e pour se connecter au serveur distant</li> <li><code>secrets.DEPLOY_ENV_PIPENV_VENV_IN_PROJECT</code>: La variable d'environnement <code>PIPENV_VENV_IN_PROJECT</code> qui sera mise dans le fichier <code>.env</code> du serveur distant par la Github Action</li> <li><code>secrets.DEPLOY_ENV_TARGET</code>: La variable d'environnement <code>TARGET</code> qui sera mise dans le fichier <code>.env</code> du serveur distant par la Github Action</li> <li><code>secrets.DEPLOY_ENV_POSTGRES_USER</code>: La variable d'environnement <code>POSTGRES_USER</code> qui sera mise dans le fichier <code>.env</code> du serveur distant par la Github Action</li> <li><code>secrets.DEPLOY_ENV_POSTGRES_PASSWORD</code>: La variable d'environnement <code>POSTGRES_PASSWORD</code> qui sera mise dans le fichier <code>.env</code> du serveur distant par la Github Action</li> <li><code>secrets.DEPLOY_ENV_POSTGRES_HOST</code>: La variable d'environnement <code>POSTGRES_HOST</code> qui sera mise dans le fichier <code>.env</code> du serveur distant par la Github Action</li> <li><code>secrets.DEPLOY_ENV_POSTGRES_PORT</code>: La variable d'environnement <code>POSTGRES_PORT</code> qui sera mise dans le fichier <code>.env</code> du serveur distant par la Github Action</li> <li><code>secrets.DEPLOY_ENV_POSTGRES_DB</code>: La variable d'environnement <code>POSTGRES_DB</code> qui sera mise dans le fichier <code>.env</code> du serveur distant par la Github Action</li> <li><code>secrets.DEPLOY_ENV_JWT_SECRET_KEY</code>: La variable d'environnement <code>JWT_SECRET_KEY</code> qui sera mise dans le fichier <code>.env</code> du serveur distant par la Github Action</li> </ul>"},{"location":"deployment/github_actions/#script-de-deploiement","title":"Script de d\u00e9ploiement","text":"<p>Le script de d\u00e9ploiement <code>deployBack.sh</code> est ex\u00e9cut\u00e9 sur le serveur distant par la Github Action.</p>"},{"location":"deployment/github_actions/#etapes-du-script-de-deploiement","title":"\u00c9tapes du script de d\u00e9ploiement","text":"<ol> <li>V\u00e9rifier que git et docker sont install\u00e9s sur le serveur</li> <li>V\u00e9rifier si le repository a d\u00e9j\u00e0 \u00e9t\u00e9 clon\u00e9 sur le serveur</li> <li>Si oui, pull le repository</li> <li>Si non, cloner le repository</li> <li>Copier le fichier <code>.env</code> depuis celui cr\u00e9\u00e9 par la Github Action (deployDotEnv) dans le repository</li> <li>Si le fichier <code>~/depoyDotEnv</code> est pr\u00e9sent sur le serveur, il sera copi\u00e9 et renomm\u00e9 en <code>.env</code> dans le repository</li> <li>Sinon, si le fichier <code>~/depoyDotEnv</code> n'est pas pr\u00e9sent:<ul> <li>ET que le repository contient d\u00e9j\u00e0 un fichier <code>.env</code>, on continue</li> <li>ET que le repository ne contient pas de fichier <code>.env</code>, on arr\u00eate le d\u00e9ploiement</li> </ul> </li> <li>Se rendre dans le repository clon\u00e9</li> <li>Arr\u00eater et supprimer les containers Docker existants (<code>docker compose down</code>)</li> <li>Lancer les containers Docker (<code>docker compose up -d</code>)</li> <li>Cr\u00e9er un fichier <code>deployStatus.txt</code> pour indiquer que le d\u00e9ploiement a \u00e9t\u00e9 effectu\u00e9 et \u00e0 quelle date</li> </ol>"},{"location":"deployment/github_actions/#diagramme-de-deploiement","title":"Diagramme de d\u00e9ploiement","text":"<pre><code>graph TD;\n   subgraph Serveur\n   direction TB\n      A[\u00c9xecute deployBack.sh] --&gt; B[Git et Docker install\u00e9s?];\n      B --&gt;|Oui| C[Repository d\u00e9j\u00e0 clon\u00e9?];\n      B --&gt;|Non| P[Erreur];\n      C --&gt; D[Oui];\n      C --&gt; E[Non];\n      D --&gt;|Pull| F;\n      E --&gt;|Clone| F[Repository \u00e0 jour];\n      F --&gt; G[deployDotEnv existe];\n      F --&gt; H[deployDotEnv n'existe pas];\n\n      subgraph Gestion du .env\n         G --&gt; I[Copie et renomme en .env];\n         H --&gt; J[Un .env existe d\u00e9j\u00e0 dans le repository];\n         H --&gt; K[Erreur];\n      end\n\n      J --&gt; L[Se rend dans le repository];\n      I --&gt; L;\n      L --&gt; M[Arr\u00eate et supprime les containers];\n      M --&gt; N[Lance les containers];\n      N --&gt; O[Cr\u00e9e deployStatus.txt];\n      O --&gt;|D\u00e9ploiement r\u00e9ussi | Success((Fin du Processus));\n   end\n   subgraph GitHub_Actions\n      deploy.yml --&gt;|Creates| deployDotEnv;\n      deployDotEnv --&gt;|Copie| Serveur;\n      deploy.yml --&gt;|Copies deployBack.sh| Serveur;\n      deploy.yml --&gt;|SSH| Serveur;\n   end</code></pre>"},{"location":"deployment/overview/","title":"Deployment","text":"<p>The project is deployed using github actions. The documentation about the deployment can be found here.</p>"},{"location":"neo4j_api_endpoints/debug/","title":"Debug API","text":"<p>This document provides detailed information about the debug-related API endpoints available in the Constellation project. All the debug endpoints are used for testing and debugging purposes only, and are available only in the development environment. As it's debug-related, it doesn't require authentication.</p>"},{"location":"neo4j_api_endpoints/debug/#get-all-nodes","title":"Get all nodes","text":""},{"location":"neo4j_api_endpoints/debug/#get-nodes","title":"GET <code>/nodes</code>","text":"<p>Description: This endpoint retrieves all nodes in the database. It is primarily used for debugging and testing purposes. It returns a list of all nodes along with their attributes and labels. This endpoint is not intended for production use.</p> <p>Response:</p> <ul> <li><code>200 OK</code>: Returns all nodes in the database.</li> <li><code>500 Internal Server Error</code>: An error occurred while retrieving nodes.</li> </ul> <p>Response Example:</p> <pre><code>{\n\"success\": true,\n\"data\": [\n{\n\"attributes\": {\n\"node_uuid\": 1,\n\"title\": \"example_title\",\n\"content\": \"example_content\"\n},\n\"labels\": [\n\"Node\"\n]\n}\n],\n\"message\": \"Nodes retrieved\"\n}\n</code></pre>"},{"location":"neo4j_api_endpoints/debug/#get-all-links","title":"Get all links","text":""},{"location":"neo4j_api_endpoints/debug/#get-links","title":"GET <code>/links</code>","text":"<p>Description:</p> <p>This endpoint retrieves all links in the database. It is primarily used for debugging and testing purposes. It returns a list of all links along with their attributes and types. This endpoint is not intended for production use.</p> <p>Response:</p> <ul> <li><code>200 OK</code>: Returns all links in the database.</li> <li><code>500 Internal Server Error</code>: An error occurred while retrieving links.</li> </ul> <p>Response Example:</p> <pre><code>{\n\"success\": true,\n\"data\": [\n{\n\"start_node\": 1,\n\"end_node\": 2,\n\"type\": \"example_type\",\n\"attributes\": {\n\"link_uuid\": 1\n}\n}\n],\n\"message\": \"Links retrieved\"\n}\n</code></pre>"},{"location":"neo4j_api_endpoints/debug/#reset-the-database","title":"Reset the database","text":""},{"location":"neo4j_api_endpoints/debug/#get-reset","title":"GET <code>/reset</code>","text":"<p>Description:</p> <p>This endpoint resets the database by deleting all nodes and links. It is primarily used for debugging and testing purposes. It is important to note that this action is irreversible and will remove all data from the database. This endpoint is not intended for production use and should be used with caution.</p> <p>Response:</p> <ul> <li><code>200 OK</code>: Returns all links in the database.</li> <li><code>500 Internal Server Error</code>: An error occurred while resetting the database.</li> </ul> <p>Response Example:</p> <pre><code>{\n\"success\": true,\n\"message\": \"Database reset\"\n}\n</code></pre>"},{"location":"neo4j_api_endpoints/debug/#populate-the-database","title":"Populate the database","text":""},{"location":"neo4j_api_endpoints/debug/#get-populate","title":"GET <code>/populate</code>","text":"<p>Description:</p> <p>This endpoint populates the database with sample data using a cypher file. It is primarily used for debugging and testing purposes. It is important to note that this action is irreversible and will remove all existing data from the database. This endpoint is not intended for production use and should be used with caution.</p> <p>Response:</p> <ul> <li><code>200 OK</code>: Returns all links in the database.</li> <li><code>404 Not Found</code>: The populate cypher file was not found.</li> <li><code>500 Internal Server Error</code>: An error occurred while populating the database.</li> </ul> <p>Response Example:</p> <pre><code>{\n\"success\": true,\n\"message\": \"Database populated\"\n}\n</code></pre> <p>or</p> <pre><code>{\n\"success\": false,\n\"message\": \"Cypher file not found\",\n\"error\": {\n\"code\": \"FILE_NOT_FOUND\",\n\"message\": \"Cypher file not found\"\n}\n}\n</code></pre>"},{"location":"neo4j_api_endpoints/links/","title":"Link API","text":"<p>This document provides detailed information about the links-related API endpoints available in the Constellation project.</p>"},{"location":"neo4j_api_endpoints/links/#base","title":"Base","text":""},{"location":"neo4j_api_endpoints/links/#get-all-links","title":"Get all links","text":""},{"location":"neo4j_api_endpoints/links/#get-constellationconstellation_uuidlinks","title":"GET <code>/constellation/{constellation_uuid}/links</code>","text":"<p>Description:</p> <p>Retrieve all links in a constellation.</p> <p>Request Parameters:</p> <ul> <li><code>constellation_uuid</code> (path): The unique identifier of the constellation.</li> <li><code>decode</code> (query, optional): Set to None by default. If set to <code>XML</code>, <code>xml</code>, <code>XML_TEXT</code> or <code>xml_text</code>, the attributes containing ydoc data will be decoded to a readable format in an xml format. If set to <code>PLAIN</code>, <code>plain</code>, <code>PLAIN_TEXT</code> or <code>plain_text</code>, the attributes containing ydoc data will be decoded to a readable format in a plain text format. Else, the attributes will be returned in their original format.</li> <li><code>in_filter</code> (query, optional): A filter to include only specific attributes in the final results.</li> <li><code>out_filter</code> (query, optional): A filter to exclude specific attributes from the final results.</li> </ul> <p>Response:</p> <ul> <li><code>200 OK</code>: Returns user details.</li> <li><code>401 Unauthorized</code>: User not authorized.</li> <li><code>403 Forbidden</code>: User does not have permission to access the constellation.</li> <li><code>404 Not Found</code>: Constellation not found.</li> <li><code>500 Internal Server Error</code>: An error occurred while retrieving links.</li> </ul> <p>Response Example:</p> <pre><code>{\n\"success\": true,\n\"data\": [\n{\n\"start_node\": 1,\n\"end_node\": 2,\n\"type\": \"example_type\",\n\"attributes\": {\n\"link_uuid\": 1\n}\n}\n],\n\"message\": \"All links successfully returned\"\n}\n</code></pre>"},{"location":"neo4j_api_endpoints/links/#get-all-links-tofrom-a-specific-node","title":"Get all links to/from a specific node","text":""},{"location":"neo4j_api_endpoints/links/#get-constellationconstellation_uuidlinknodenode_uuid","title":"GET <code>/constellation/{constellation_uuid}/link/node/{node_uuid}</code>","text":"<p>Description:</p> <p>Retrieve all links to/from a specific node in a constellation.</p> <p>Request Parameters:</p> <ul> <li><code>constellation_uuid</code> (path): The unique identifier of the constellation.</li> <li><code>node_uuid</code> (path): The unique identifier of the node.</li> <li><code>decode</code> (query, optional): Set to None by default. If set to <code>XML</code>, <code>xml</code>, <code>XML_TEXT</code> or <code>xml_text</code>, the attributes containing ydoc data will be decoded to a readable format in an xml format. If set to <code>PLAIN</code>, <code>plain</code>, <code>PLAIN_TEXT</code> or <code>plain_text</code>, the attributes containing ydoc data will be decoded to a readable format in a plain text format. Else, the attributes will be returned in their original format.</li> <li><code>in_filter</code> (query, optional): A filter to include only specific attributes in the final results.</li> <li><code>out_filter</code> (query, optional): A filter to exclude specific attributes from the final results.</li> </ul> <p>Response:</p> <ul> <li><code>200 OK</code>: Returns user details.</li> <li><code>401 Unauthorized</code>: User not authorized.</li> <li><code>403 Forbidden</code>: User does not have permission to access the constellation.</li> <li><code>404 Not Found</code>: Constellation not found.</li> <li><code>500 Internal Server Error</code>: An error occurred while retrieving links.</li> </ul> <p>Response Example:</p> <pre><code>{\n\"success\": true,\n\"data\": [\n{\n\"start_node\": 1,\n\"end_node\": 2,\n\"type\": \"example_type\",\n\"attributes\": {\n\"link_uuid\": 1\n}\n}\n],\n\"message\": \"All links successfully returned\"\n}\n</code></pre>"},{"location":"neo4j_api_endpoints/links/#get-a-link-by-uuid","title":"Get a link by UUID","text":""},{"location":"neo4j_api_endpoints/links/#get-constellationconstellation_uuidlinklink_uuid","title":"GET <code>/constellation/{constellation_uuid}/link/{link_uuid}</code>","text":"<p>Description:</p> <p>Retrieve a link by its UUID in a constellation.</p> <p>Request Parameters:</p> <ul> <li><code>constellation_uuid</code> (path): The unique identifier of the constellation.</li> <li><code>link_uuid</code> (path): The unique identifier of the link.</li> <li><code>decode</code> (query, optional): Set to None by default. If set to <code>XML</code>, <code>xml</code>, <code>XML_TEXT</code> or <code>xml_text</code>, the attributes containing ydoc data will be decoded to a readable format in an xml format. If set to <code>PLAIN</code>, <code>plain</code>, <code>PLAIN_TEXT</code> or <code>plain_text</code>, the attributes containing ydoc data will be decoded to a readable format in a plain text format. Else, the attributes will be returned in their original format.</li> <li><code>in_filter</code> (query, optional): A filter to include only specific attributes in the final results.</li> <li><code>out_filter</code> (query, optional): A filter to exclude specific attributes from the final results.</li> </ul> <p>Response:</p> <ul> <li><code>200 OK</code>: Returns user details.</li> <li><code>401 Unauthorized</code>: User not authorized.</li> <li><code>403 Forbidden</code>: User does not have permission to access the constellation.</li> <li><code>404 Not Found</code>: Constellation not found.</li> <li><code>500 Internal Server Error</code>: An error occurred while retrieving links.</li> </ul> <p>Response Example:</p> <pre><code>{\n\"success\": true,\n\"data\": [\n{\n\"start_node\": 1,\n\"end_node\": 2,\n\"type\": \"example_type\",\n\"attributes\": {\n\"link_uuid\": 1\n}\n}\n],\n\"message\": \"Link successfully returned\"\n}\n</code></pre>"},{"location":"neo4j_api_endpoints/links/#create-a-new-link","title":"Create a new link","text":""},{"location":"neo4j_api_endpoints/links/#post-constellationconstellation_uuidlink","title":"POST <code>/constellation/{constellation_uuid}/link</code>","text":"<p>Description:</p> <p>Create a new link in a constellation.</p> <p>Request Parameters:</p> <ul> <li><code>constellation_uuid</code> (path): The unique identifier of the constellation.</li> <li><code>decode</code> (query, optional): Set to None by default. If set to <code>XML</code>, <code>xml</code>, <code>XML_TEXT</code> or <code>xml_text</code>, the attributes containing ydoc data will be decoded to a readable format in an xml format. If set to <code>PLAIN</code>, <code>plain</code>, <code>PLAIN_TEXT</code> or <code>plain_text</code>, the attributes containing ydoc data will be decoded to a readable format in a plain text format. Else, the attributes will be returned in their original format.</li> <li><code>in_filter</code> (query, optional): A filter to include only specific attributes in the final results.</li> <li><code>out_filter</code> (query, optional): A filter to exclude specific attributes from the final results.</li> </ul> <p>Request Body:</p> <ul> <li><code>start_node</code> (body): The UUID of the start node.</li> <li><code>end_node</code> (body): The UUID of the end node.</li> <li><code>link_type</code> (body): The type of the link.</li> </ul> <pre><code>{\n\"start_node\": \"0000-000000...\",\n\"end_node\": \"0000-000000...\",\n\"link_type\": \"string\"\n}\n</code></pre> <p>Response:</p> <ul> <li><code>200 OK</code>: Returns user details.</li> <li><code>401 Unauthorized</code>: User not authorized.</li> <li><code>403 Forbidden</code>: User does not have permission to access the constellation.</li> <li><code>404 Not Found</code>: Constellation not found.</li> <li><code>500 Internal Server Error</code>: An error occurred while retrieving links.</li> </ul> <p>Response Example:</p> <pre><code>{\n\"success\": true,\n\"data\": [\n{\n\"start_node\": 1,\n\"end_node\": 2,\n\"type\": \"example_type\",\n\"attributes\": {\n\"link_uuid\": 1\n}\n}\n],\n\"message\": \"Link successfully created\"\n}\n</code></pre>"},{"location":"neo4j_api_endpoints/links/#delete-a-link","title":"Delete a link","text":""},{"location":"neo4j_api_endpoints/links/#delete-constellationconstellation_uuidlink","title":"DELETE <code>/constellation/{constellation_uuid}/link</code>","text":"<p>Description:</p> <p>Delete a link in a constellation.</p> <p>Request Parameters:</p> <ul> <li><code>constellation_uuid</code> (path): The unique identifier of the constellation.</li> </ul> <p>Request Body:</p> <ul> <li><code>start_node</code> (body): The UUID of the start node.</li> <li><code>end_node</code> (body): The UUID of the end node.</li> <li><code>link_type</code> (body): The type of the link.</li> </ul> <pre><code>{\n\"start_node\": \"0000-000000...\",\n\"end_node\": \"0000-000000...\",\n\"link_type\": \"string\"\n}\n</code></pre> <p>Response:</p> <ul> <li><code>200 OK</code>: Returns user details.</li> <li><code>401 Unauthorized</code>: User not authorized.</li> <li><code>403 Forbidden</code>: User does not have permission to access the constellation.</li> <li><code>404 Not Found</code>: Constellation not found.</li> <li><code>500 Internal Server Error</code>: An error occurred while retrieving links.</li> </ul> <p>Response Example:</p> <pre><code>{\n\"success\": true,\n\"message\": \"Link successfully deleted\"\n}\n</code></pre>"},{"location":"neo4j_api_endpoints/links/#update-a-link","title":"Update a link","text":""},{"location":"neo4j_api_endpoints/links/#patch-constellationconstellation_uuidlink","title":"PATCH <code>/constellation/{constellation_uuid}/link</code>","text":"<p>Description:</p> <p>Update a link in a constellation.</p> <p>Request Parameters:</p> <ul> <li><code>constellation_uuid</code> (path): The unique identifier of the constellation.</li> <li><code>decode</code> (query, optional): Set to None by default. If set to <code>XML</code>, <code>xml</code>, <code>XML_TEXT</code> or <code>xml_text</code>, the attributes containing ydoc data will be decoded to a readable format in an xml format. If set to <code>PLAIN</code>, <code>plain</code>, <code>PLAIN_TEXT</code> or <code>plain_text</code>, the attributes containing ydoc data will be decoded to a readable format in a plain text format. Else, the attributes will be returned in their original format.</li> <li><code>in_filter</code> (query, optional): A filter to include only specific attributes in the final results.</li> <li><code>out_filter</code> (query, optional): A filter to exclude specific attributes from the final results.</li> </ul> <p>Request Body:</p> <ul> <li><code>start_node</code> (body): The UUID of the start node.</li> <li><code>end_node</code> (body): The UUID of the end node.</li> <li><code>link_type</code> (body): The type of the link.</li> <li><code>new_link_type</code> (body): The new type of the link.</li> </ul> <pre><code>{\n\"start_node\": \"0000-000000...\",\n\"end_node\": \"0000-000000...\",\n\"link_type\": \"string\",\n\"new_link_type\": \"string\"\n}\n</code></pre> <p>Response:</p> <ul> <li><code>200 OK</code>: Returns user details.</li> <li><code>401 Unauthorized</code>: User not authorized.</li> <li><code>403 Forbidden</code>: User does not have permission to access the constellation.</li> <li><code>404 Not Found</code>: Constellation not found.</li> <li><code>500 Internal Server Error</code>: An error occurred while retrieving links.</li> </ul> <p>Response Example:</p> <pre><code>{\n\"success\": true,\n\"data\": [\n{\n\"start_node\": 1,\n\"end_node\": 2,\n\"type\": \"example_type\",\n\"attributes\": {\n\"link_uuid\": 1\n}\n}\n],\n\"message\": \"Link successfully updated\"\n}\n</code></pre>"},{"location":"neo4j_api_endpoints/links/#attributes","title":"Attributes","text":""},{"location":"neo4j_api_endpoints/links/#get-all-attributes-of-a-specific-link","title":"Get all attributes of a specific link","text":""},{"location":"neo4j_api_endpoints/links/#get-constellationconstellation_uuidlinklink_uuidattributes","title":"GET <code>/constellation/{constellation_uuid}/link/{link_uuid}/attributes</code>","text":"<p>Description:</p> <p>Retrieve all attributes keys of a specific link in a constellation.</p> <p>Request Parameters:</p> <ul> <li><code>constellation_uuid</code> (path): The unique identifier of the constellation.</li> <li><code>link_uuid</code> (path): The unique identifier of the link.</li> </ul> <p>Response:</p> <ul> <li><code>200 OK</code>: Returns user details.</li> <li><code>401 Unauthorized</code>: User not authorized.</li> <li><code>403 Forbidden</code>: User does not have permission to access the constellation.</li> <li><code>404 Not Found</code>: Constellation not found.</li> <li><code>500 Internal Server Error</code>: An error occurred while retrieving links.</li> </ul> <p>Response Example:</p> <pre><code>{\n\"success\": true,\n\"data\": [\n[\n\"attribute1\",\n\"attribute2\",\n\"attribute3\"\n]\n],\n\"message\": \"Attributes retrieved\"\n}\n</code></pre>"},{"location":"neo4j_api_endpoints/links/#get-the-value-of-a-specific-attribute-of-a-specific-link","title":"Get the value of a specific attribute of a specific link","text":""},{"location":"neo4j_api_endpoints/links/#get-constellationconstellation_uuidlinklink_uuidattributeattribute","title":"GET <code>/constellation/{constellation_uuid}/link/{link_uuid}/attribute/{attribute}</code>","text":"<p>Description:</p> <p>Retrieve the value of a specific attribute of a specific link in a constellation.</p> <p>Request Parameters:</p> <ul> <li><code>constellation_uuid</code> (path): The unique identifier of the constellation.</li> <li><code>link_uuid</code> (path): The unique identifier of the link.</li> <li><code>attribute</code> (path): The name of the attribute.</li> <li><code>decode</code> (query, optional): Set to None by default. If set to <code>XML</code>, <code>xml</code>, <code>XML_TEXT</code> or <code>xml_text</code>, the attributes containing ydoc data will be decoded to a readable format in an xml format. If set to <code>PLAIN</code>, <code>plain</code>, <code>PLAIN_TEXT</code> or <code>plain_text</code>, the attributes containing ydoc data will be decoded to a readable format in a plain text format. Else, the attributes will be returned in their original format.</li> </ul> <p>Response:</p> <ul> <li><code>200 OK</code>: Returns user details.</li> <li><code>401 Unauthorized</code>: User not authorized.</li> <li><code>403 Forbidden</code>: User does not have permission to access the constellation.</li> <li><code>404 Not Found</code>: Constellation not found.</li> <li><code>500 Internal Server Error</code>: An error occurred while retrieving links.</li> </ul> <p>Response Example:</p> <pre><code>{\n\"success\": true,\n\"data\": [\n\"value1\"\n],\n\"message\": \"Attribute retrieved\"\n}\n</code></pre>"},{"location":"neo4j_api_endpoints/links/#set-the-value-of-a-specific-attribute-of-a-specific-link","title":"Set the value of a specific attribute of a specific link","text":""},{"location":"neo4j_api_endpoints/links/#patch-constellationconstellation_uuidlinklink_uuidattributeattribute","title":"PATCH <code>/constellation/{constellation_uuid}/link/{link_uuid}/attribute/{attribute}</code>","text":"<p>Description:</p> <p>Set the value of a specific attribute of a specific link in a constellation.</p> <p>Request Parameters:</p> <ul> <li><code>constellation_uuid</code> (path): The unique identifier of the constellation.</li> <li><code>link_uuid</code> (path): The unique identifier of the link.</li> <li><code>attribute</code> (path): The name of the attribute.</li> <li><code>decode</code> (query, optional): Set to None by default. If set to <code>XML</code>, <code>xml</code>, <code>XML_TEXT</code> or <code>xml_text</code>, the attributes containing ydoc data will be decoded to a readable format in an xml format. If set to <code>PLAIN</code>, <code>plain</code>, <code>PLAIN_TEXT</code> or <code>plain_text</code>, the attributes containing ydoc data will be decoded to a readable format in a plain text format. Else, the attributes will be returned in their original format.</li> <li><code>in_filter</code> (query, optional): A filter to include only specific attributes in the final results.</li> <li><code>out_filter</code> (query, optional): A filter to exclude specific attributes from the final results.</li> </ul> <p>Request Body:</p> <ul> <li><code>value</code> (body): The new value for the attribute.</li> </ul> <pre><code>{\n\"value\": \"new_value\"\n}\n</code></pre> <p>Response:</p> <ul> <li><code>200 OK</code>: Returns user details.</li> <li><code>401 Unauthorized</code>: User not authorized.</li> <li><code>403 Forbidden</code>: User does not have permission to access the constellation.</li> <li><code>404 Not Found</code>: Constellation not found.</li> <li><code>500 Internal Server Error</code>: An error occurred while retrieving links.</li> </ul> <p>Response Example:</p> <pre><code>{\n\"success\": true,\n\"data\": [\n{\n\"start_node\": 1,\n\"end_node\": 2,\n\"type\": \"LINK\",\n\"attributes\": {\n\"link_uuid\": 1,\n\"attribute\": \"value\"\n}\n}\n],\n\"message\": \"Attribute updated\"\n}\n</code></pre>"},{"location":"neo4j_api_endpoints/links/#delete-a-specific-attribute-of-a-specific-link","title":"Delete a specific attribute of a specific link","text":""},{"location":"neo4j_api_endpoints/links/#delete-constellationconstellation_uuidlinklink_uuidattributeattribute","title":"DELETE <code>/constellation/{constellation_uuid}/link/{link_uuid}/attribute/{attribute}</code>","text":"<p>Description:</p> <p>Delete a specific attribute of a specific link in a constellation.</p> <p>Request Parameters:</p> <ul> <li><code>constellation_uuid</code> (path): The unique identifier of the constellation.</li> <li><code>link_uuid</code> (path): The unique identifier of the link.</li> <li><code>attribute</code> (path): The name of the attribute.</li> <li><code>decode</code> (query, optional): Set to None by default. If set to <code>XML</code>, <code>xml</code>, <code>XML_TEXT</code> or <code>xml_text</code>, the attributes containing ydoc data will be decoded to a readable format in an xml format. If set to <code>PLAIN</code>, <code>plain</code>, <code>PLAIN_TEXT</code> or <code>plain_text</code>, the attributes containing ydoc data will be decoded to a readable format in a plain text format. Else, the attributes will be returned in their original format.</li> <li><code>in_filter</code> (query, optional): A filter to include only specific attributes in the final results.</li> <li><code>out_filter</code> (query, optional): A filter to exclude specific attributes from the final results.</li> </ul> <p>Response:</p> <ul> <li><code>200 OK</code>: Returns user details.</li> <li><code>401 Unauthorized</code>: User not authorized.</li> <li><code>403 Forbidden</code>: User does not have permission to access the constellation.</li> <li><code>404 Not Found</code>: Constellation not found.</li> <li><code>500 Internal Server Error</code>: An error occurred while retrieving links.</li> </ul> <p>Response Example:</p> <pre><code>{\n\"success\": true,\n\"data\": [\n{\n\"start_node\": 1,\n\"end_node\": 2,\n\"type\": \"LINK\",\n\"attributes\": {\n\"link_uuid\": 1,\n\"attribute\": \"value\"\n}\n}\n],\n\"message\": \"Attribute deleted\"\n}\n</code></pre>"},{"location":"neo4j_api_endpoints/links/#add-a-new-attribute-to-a-link","title":"Add a new attribute to a link","text":""},{"location":"neo4j_api_endpoints/links/#post-constellationconstellation_uuidlinklink_uuidattributeattribute","title":"POST <code>/constellation/{constellation_uuid}/link/{link_uuid}/attribute/{attribute}</code>","text":"<p>Description:</p> <p>Add a new attribute to a link in a constellation.</p> <p>Request Parameters:</p> <ul> <li><code>constellation_uuid</code> (path): The unique identifier of the constellation.</li> <li><code>link_uuid</code> (path): The unique identifier of the link.</li> <li><code>attribute</code> (path): The name of the attribute.</li> <li><code>decode</code> (query, optional): Set to None by default. If set to <code>XML</code>, <code>xml</code>, <code>XML_TEXT</code> or <code>xml_text</code>, the attributes containing ydoc data will be decoded to a readable format in an xml format. If set to <code>PLAIN</code>, <code>plain</code>, <code>PLAIN_TEXT</code> or <code>plain_text</code>, the attributes containing ydoc data will be decoded to a readable format in a plain text format. Else, the attributes will be returned in their original format.</li> <li><code>in_filter</code> (query, optional): A filter to include only specific attributes in the final results.</li> <li><code>out_filter</code> (query, optional): A filter to exclude specific attributes from the final results.</li> </ul> <p>Request Body:</p> <ul> <li><code>value</code> (body): The value for the attribute.</li> </ul> <pre><code>{\n\"value\": \"new_value\"\n}\n</code></pre> <p>Response:</p> <ul> <li><code>200 OK</code>: Returns user details.</li> <li><code>401 Unauthorized</code>: User not authorized.</li> <li><code>403 Forbidden</code>: User does not have permission to access the constellation.</li> <li><code>404 Not Found</code>: Constellation not found.</li> <li><code>500 Internal Server Error</code>: An error occurred while retrieving links.</li> </ul> <p>Response Example:</p> <pre><code>{\n\"success\": true,\n\"data\": [\n{\n\"start_node\": 1,\n\"end_node\": 2,\n\"type\": \"LINK\",\n\"attributes\": {\n\"link_uuid\": 1,\n\"attribute\": \"value\"\n}\n}\n],\n\"message\": \"Attribute added\"\n}\n</code></pre>"},{"location":"neo4j_api_endpoints/links/#get-all-links-with-a-specific-attribute","title":"Get all links with a specific attribute","text":""},{"location":"neo4j_api_endpoints/links/#get-constellationconstellation_uuidlinksattributeattribute","title":"GET <code>/constellation/{constellation_uuid}/links/attribute/{attribute}</code>","text":"<p>Description:</p> <p>Retrieve all links with a specific attribute key in a constellation.</p> <p>Request Parameters:</p> <ul> <li><code>constellation_uuid</code> (path): The unique identifier of the constellation.</li> <li><code>attribute</code> (path): The name of the attribute.</li> <li><code>decode</code> (query, optional): Set to None by default. If set to <code>XML</code>, <code>xml</code>, <code>XML_TEXT</code> or <code>xml_text</code>, the attributes containing ydoc data will be decoded to a readable format in an xml format. If set to <code>PLAIN</code>, <code>plain</code>, <code>PLAIN_TEXT</code> or <code>plain_text</code>, the attributes containing ydoc data will be decoded to a readable format in a plain text format. Else, the attributes will be returned in their original format.</li> <li><code>in_filter</code> (query, optional): A filter to include only specific attributes in the final results.</li> <li><code>out_filter</code> (query, optional): A filter to exclude specific attributes from the final results.</li> </ul> <p>Response:</p> <ul> <li><code>200 OK</code>: Returns user details.</li> <li><code>401 Unauthorized</code>: User not authorized.</li> <li><code>403 Forbidden</code>: User does not have permission to access the constellation.</li> <li><code>404 Not Found</code>: Constellation not found.</li> <li><code>500 Internal Server Error</code>: An error occurred while retrieving links.</li> </ul> <p>Response Example:</p> <pre><code>{\n\"success\": true,\n\"data\": [\n{\n\"start_node\": 1,\n\"end_node\": 2,\n\"type\": \"LINK\",\n\"attributes\": {\n\"link_uuid\": 1,\n\"attribute\": \"value\"\n}\n}\n],\n\"message\": \"Links retrieved\"\n}\n</code></pre>"},{"location":"neo4j_api_endpoints/nodes/","title":"Node API","text":"<p>This document provides detailed information about the nodes-related API endpoints available in the Constellation project.</p>"},{"location":"neo4j_api_endpoints/nodes/#base","title":"Base","text":""},{"location":"neo4j_api_endpoints/nodes/#get-all-nodes","title":"Get all nodes","text":""},{"location":"neo4j_api_endpoints/nodes/#get-constellationconstellation_uuidnodes","title":"GET <code>/constellation/{constellation_uuid}/nodes</code>","text":"<p>Description:</p> <p>Retrieve all nodes in a constellation.</p> <p>Request Parameters:</p> <ul> <li><code>constellation_uuid</code> (path): The unique identifier of the constellation.</li> <li><code>decode</code> (query, optional): Set to None by default. If set to <code>XML</code>, <code>xml</code>, <code>XML_TEXT</code> or <code>xml_text</code>, the attributes containing ydoc data will be decoded to a readable format in an xml format. If set to <code>PLAIN</code>, <code>plain</code>, <code>PLAIN_TEXT</code> or <code>plain_text</code>, the attributes containing ydoc data will be decoded to a readable format in a plain text format. Else, the attributes will be returned in their original format.</li> <li><code>in_filter</code> (query, optional): A filter to include only specific attributes in the final results.</li> <li><code>out_filter</code> (query, optional): A filter to exclude specific attributes from the final results.</li> </ul> <p>Response:</p> <ul> <li><code>200 OK</code>: Returns user details.</li> <li><code>401 Unauthorized</code>: User not authorized.</li> <li><code>403 Forbidden</code>: User does not have permission to access the constellation.</li> <li><code>404 Not Found</code>: Constellation not found.</li> <li><code>500 Internal Server Error</code>: An error occurred while retrieving links.</li> </ul> <p>Response Example:</p> <pre><code>{\n\"success\": true,\n\"data\": [\n{\n\"attributes\": {\n\"node_uuid\": 1,\n\"title\": \"example_title\",\n\"content\": \"example_content\"\n},\n\"labels\": [\n\"Node\"\n]\n}\n],\n\"message\": \"All nodes successfully returned\"\n}\n</code></pre>"},{"location":"neo4j_api_endpoints/nodes/#get-a-node-by-uuid","title":"Get a node by UUID","text":""},{"location":"neo4j_api_endpoints/nodes/#get-constellationconstellation_uuidnodenode_uuid","title":"GET <code>/constellation/{constellation_uuid}/node/{node_uuid}</code>","text":"<p>Description:</p> <p>Retrieve a node by its UUID.</p> <p>Request Parameters:</p> <ul> <li><code>constellation_uuid</code> (path): The unique identifier of the constellation.</li> <li><code>node_uuid</code> (path): The unique identifier of the node.</li> <li><code>decode</code> (query, optional): Set to None by default. If set to <code>XML</code>, <code>xml</code>, <code>XML_TEXT</code> or <code>xml_text</code>, the attributes containing ydoc data will be decoded to a readable format in an xml format. If set to <code>PLAIN</code>, <code>plain</code>, <code>PLAIN_TEXT</code> or <code>plain_text</code>, the attributes containing ydoc data will be decoded to a readable format in a plain text format. Else, the attributes will be returned in their original format.</li> <li><code>in_filter</code> (query, optional): A filter to include only specific attributes in the final results.</li> <li><code>out_filter</code> (query, optional): A filter to exclude specific attributes from the final results.</li> </ul> <p>Response:</p> <ul> <li><code>200 OK</code>: Returns user details.</li> <li><code>401 Unauthorized</code>: User not authorized.</li> <li><code>403 Forbidden</code>: User does not have permission to access the constellation.</li> <li><code>404 Not Found</code>: Constellation not found.</li> <li><code>500 Internal Server Error</code>: An error occurred while retrieving links.</li> </ul> <p>Response Example:</p> <pre><code>{\n\"success\": true,\n\"data\": [\n{\n\"attributes\": {\n\"node_uuid\": 1,\n\"title\": \"example_title\",\n\"content\": \"example_content\"\n},\n\"labels\": [\n\"Node\"\n]\n}\n],\n\"message\": \"Node retrieved successfully\"\n}\n</code></pre>"},{"location":"neo4j_api_endpoints/nodes/#update-a-node","title":"Update a node","text":""},{"location":"neo4j_api_endpoints/nodes/#patch-constellationconstellation_uuidnodenode_uuid","title":"PATCH <code>/constellation/{constellation_uuid}/node/{node_uuid}</code>","text":"<p>Description:</p> <p>Update a node by its UUID.</p> <p>Request Parameters:</p> <ul> <li><code>constellation_uuid</code> (path): The unique identifier of the constellation.</li> <li><code>node_uuid</code> (path): The unique identifier of the node.</li> <li><code>decode</code> (query, optional): Set to None by default. If set to <code>XML</code>, <code>xml</code>, <code>XML_TEXT</code> or <code>xml_text</code>, the attributes containing ydoc data will be decoded to a readable format in an xml format. If set to <code>PLAIN</code>, <code>plain</code>, <code>PLAIN_TEXT</code> or <code>plain_text</code>, the attributes containing ydoc data will be decoded to a readable format in a plain text format. Else, the attributes will be returned in their original format.</li> <li><code>in_filter</code> (query, optional): A filter to include only specific attributes in the final results.</li> <li><code>out_filter</code> (query, optional): A filter to exclude specific attributes from the final results.</li> </ul> <p>Request Body:</p> <pre><code>{\n\"title\": \"example_title\",\n\"content\": \"example_content\",\n\"example_attribute\": \"example_value\"\n}\n</code></pre> <p>Response:</p> <ul> <li><code>200 OK</code>: Returns user details.</li> <li><code>401 Unauthorized</code>: User not authorized.</li> <li><code>403 Forbidden</code>: User does not have permission to access the constellation.</li> <li><code>404 Not Found</code>: Constellation not found.</li> <li><code>500 Internal Server Error</code>: An error occurred while retrieving links.</li> </ul> <p>Response Example:</p> <pre><code>{\n\"success\": true,\n\"data\": [\n{\n\"attributes\": {\n\"node_uuid\": 1,\n\"title\": \"example_title\",\n\"content\": \"example_content\"\n},\n\"labels\": [\n\"Node\"\n]\n}\n],\n\"message\": \"Node updated successfully\"\n}\n</code></pre>"},{"location":"neo4j_api_endpoints/nodes/#delete-a-node","title":"Delete a node","text":""},{"location":"neo4j_api_endpoints/nodes/#delete-constellationconstellation_uuidnodenode_uuid","title":"DELETE <code>/constellation/{constellation_uuid}/node/{node_uuid}</code>","text":"<p>Description:</p> <p>Delete a node by its UUID.</p> <p>Request Parameters:</p> <ul> <li><code>constellation_uuid</code> (path): The unique identifier of the constellation.</li> <li><code>node_uuid</code> (path): The unique identifier of the node.</li> </ul> <p>Response:</p> <ul> <li><code>200 OK</code>: Returns user details.</li> <li><code>401 Unauthorized</code>: User not authorized.</li> <li><code>403 Forbidden</code>: User does not have permission to access the constellation.</li> <li><code>404 Not Found</code>: Constellation not found.</li> <li><code>500 Internal Server Error</code>: An error occurred while retrieving links.</li> </ul> <p>Response Example:</p> <pre><code>{\n\"success\": true,\n\"message\": \"Node deleted successfully\"\n}\n</code></pre>"},{"location":"neo4j_api_endpoints/nodes/#create-a-new-node","title":"Create a new node","text":""},{"location":"neo4j_api_endpoints/nodes/#post-constellationconstellation_uuidnode","title":"POST <code>/constellation/{constellation_uuid}/node</code>","text":"<p>Description:</p> <p>Create a new node in the constellation.</p> <p>Request Parameters:</p> <ul> <li><code>constellation_uuid</code> (path): The unique identifier of the constellation.</li> <li><code>decode</code> (query, optional): Set to None by default. If set to <code>XML</code>, <code>xml</code>, <code>XML_TEXT</code> or <code>xml_text</code>, the attributes containing ydoc data will be decoded to a readable format in an xml format. If set to <code>PLAIN</code>, <code>plain</code>, <code>PLAIN_TEXT</code> or <code>plain_text</code>, the attributes containing ydoc data will be decoded to a readable format in a plain text format. Else, the attributes will be returned in their original format.</li> <li><code>in_filter</code> (query, optional): A filter to include only specific attributes in the final results.</li> <li><code>out_filter</code> (query, optional): A filter to exclude specific attributes from the final results.</li> </ul> <p>Request Body:</p> <pre><code>{\n\"title\": \"example_title\",\n\"content\": \"example_content\",\n\"example_attribute\": \"example_value\"\n}\n</code></pre> <p>Response:</p> <ul> <li><code>200 OK</code>: Returns user details.</li> <li><code>401 Unauthorized</code>: User not authorized.</li> <li><code>403 Forbidden</code>: User does not have permission to access the constellation.</li> <li><code>404 Not Found</code>: Constellation not found.</li> <li><code>500 Internal Server Error</code>: An error occurred while retrieving links.</li> </ul> <p>Response Example:</p> <pre><code>{\n\"success\": true,\n\"data\": [\n{\n\"attributes\": {\n\"node_uuid\": 1,\n\"title\": \"example_title\",\n\"content\": \"example_content\"\n},\n\"labels\": [\n\"Node\"\n]\n}\n],\n\"message\": \"Node created successfully\"\n}\n</code></pre>"},{"location":"neo4j_api_endpoints/nodes/#attributes","title":"Attributes","text":""},{"location":"neo4j_api_endpoints/nodes/#get-all-attributes-in-the-constellation","title":"Get all attributes in the constellation","text":""},{"location":"neo4j_api_endpoints/nodes/#get-constellationconstellation_uuidattributes","title":"GET <code>/constellation/{constellation_uuid}/attributes</code>","text":"<p>Description:</p> <p>Retrieve all attributes keys from every node in the constellation.</p> <p>Request Parameters:</p> <ul> <li><code>constellation_uuid</code> (path): The unique identifier of the constellation.</li> </ul> <p>Response:</p> <ul> <li><code>200 OK</code>: Returns user details.</li> <li><code>401 Unauthorized</code>: User not authorized.</li> <li><code>403 Forbidden</code>: User does not have permission to access the constellation.</li> <li><code>404 Not Found</code>: Constellation not found.</li> <li><code>500 Internal Server Error</code>: An error occurred while retrieving links.</li> </ul> <p>Response Example:</p> <pre><code>{\n\"success\": true,\n\"data\": [\n\"attribute1\",\n\"attribute2\",\n\"attribute3\"\n],\n\"message\": \"Attributes retrieved\"\n}\n</code></pre>"},{"location":"neo4j_api_endpoints/nodes/#get-all-attributes-of-a-node","title":"Get all attributes of a node","text":""},{"location":"neo4j_api_endpoints/nodes/#get-constellationconstellation_uuidnodenode_uuidattributes","title":"GET <code>/constellation/{constellation_uuid}/node/{node_uuid}/attributes</code>","text":"<p>Description:</p> <p>Retrieve all attributes keys of a node.</p> <p>Request Parameters:</p> <ul> <li><code>constellation_uuid</code> (path): The unique identifier of the constellation.</li> <li><code>node_uuid</code> (path): The unique identifier of the node.</li> </ul> <p>Response:</p> <ul> <li><code>200 OK</code>: Returns user details.</li> <li><code>401 Unauthorized</code>: User not authorized.</li> <li><code>403 Forbidden</code>: User does not have permission to access the constellation.</li> <li><code>404 Not Found</code>: Constellation not found.</li> <li><code>500 Internal Server Error</code>: An error occurred while retrieving links.</li> </ul> <p>Response Example:</p> <pre><code>{\n\"success\": true,\n\"data\": [\n\"attribute1\",\n\"attribute2\",\n\"attribute3\"\n],\n\"message\": \"Attributes retrieved\"\n}\n</code></pre>"},{"location":"neo4j_api_endpoints/nodes/#get-the-value-of-a-specific-attribute-of-a-node","title":"Get the value of a specific attribute of a node","text":""},{"location":"neo4j_api_endpoints/nodes/#get-constellationconstellation_uuidnodenode_uuidattributeattribute","title":"GET <code>/constellation/{constellation_uuid}/node/{node_uuid}/attribute/{attribute}</code>","text":"<p>Description:</p> <p>Retrieve the value of a specific attribute of a node.</p> <p>Request Parameters:</p> <ul> <li><code>constellation_uuid</code> (path): The unique identifier of the constellation.</li> <li><code>node_uuid</code> (path): The unique identifier of the node.</li> <li><code>attribute</code> (path): The name of the attribute.</li> <li><code>decode</code> (query, optional): Set to None by default. If set to <code>XML</code>, <code>xml</code>, <code>XML_TEXT</code> or <code>xml_text</code>, the attributes containing ydoc data will be decoded to a readable format in an xml format. If set to <code>PLAIN</code>, <code>plain</code>, <code>PLAIN_TEXT</code> or <code>plain_text</code>, the attributes containing ydoc data will be decoded to a readable format in a plain text format. Else, the attributes will be returned in their original format.</li> </ul> <p>Response:</p> <ul> <li><code>200 OK</code>: Returns user details.</li> <li><code>401 Unauthorized</code>: User not authorized.</li> <li><code>403 Forbidden</code>: User does not have permission to access the constellation.</li> <li><code>404 Not Found</code>: Constellation not found.</li> <li><code>500 Internal Server Error</code>: An error occurred while retrieving links.</li> </ul> <p>Response Example:</p> <pre><code>{\n\"success\": true,\n\"data\": [\n\"value\"\n],\n\"message\": \"Attribute retrieved\"\n}\n</code></pre>"},{"location":"neo4j_api_endpoints/nodes/#set-the-value-of-a-specific-attribute-of-a-node","title":"Set the value of a specific attribute of a node","text":""},{"location":"neo4j_api_endpoints/nodes/#patch-constellationconstellation_uuidnodenode_uuidattributeattribute","title":"PATCH <code>/constellation/{constellation_uuid}/node/{node_uuid}/attribute/{attribute}</code>","text":"<p>Description:</p> <p>Set the value of a specific attribute of a node.</p> <p>Request Parameters:</p> <ul> <li><code>constellation_uuid</code> (path): The unique identifier of the constellation.</li> <li><code>node_uuid</code> (path): The unique identifier of the node.</li> <li><code>attribute</code> (path): The name of the attribute.</li> <li><code>decode</code> (query, optional): Set to None by default. If set to <code>XML</code>, <code>xml</code>, <code>XML_TEXT</code> or <code>xml_text</code>, the attributes containing ydoc data will be decoded to a readable format in an xml format. If set to <code>PLAIN</code>, <code>plain</code>, <code>PLAIN_TEXT</code> or <code>plain_text</code>, the attributes containing ydoc data will be decoded to a readable format in a plain text format. Else, the attributes will be returned in their original format.</li> <li><code>in_filter</code> (query, optional): A filter to include only specific attributes in the final results.</li> <li><code>out_filter</code> (query, optional): A filter to exclude specific attributes from the final results.</li> </ul> <p>Request Body:</p> <ul> <li><code>value</code> (body): The value to set for the attribute.</li> </ul> <pre><code>{\n\"value\": \"example_value\"\n}\n</code></pre> <p>Response:</p> <ul> <li><code>200 OK</code>: Returns user details.</li> <li><code>401 Unauthorized</code>: User not authorized.</li> <li><code>403 Forbidden</code>: User does not have permission to access the constellation.</li> <li><code>404 Not Found</code>: Constellation not found.</li> <li><code>500 Internal Server Error</code>: An error occurred while retrieving links.</li> </ul> <p>Response Example:</p> <pre><code>{\n\"success\": true,\n\"data\": [\n{\n\"attributes\": {\n\"node_uuid\": 1,\n\"title\": \"example_title\",\n\"content\": \"example_content\"\n},\n\"labels\": [\n\"Node\"\n]\n}\n],\n\"message\": \"Attribute updated\"\n}\n</code></pre>"},{"location":"neo4j_api_endpoints/nodes/#delete-a-specific-attribute-of-a-node","title":"Delete a specific attribute of a node","text":""},{"location":"neo4j_api_endpoints/nodes/#delete-constellationconstellation_uuidnodenode_uuidattributeattribute","title":"DELETE <code>/constellation/{constellation_uuid}/node/{node_uuid}/attribute/{attribute}</code>","text":"<p>Description:</p> <p>Delete a specific attribute of a node.</p> <p>Request Parameters:</p> <ul> <li><code>constellation_uuid</code> (path): The unique identifier of the constellation.</li> <li><code>node_uuid</code> (path): The unique identifier of the node.</li> <li><code>attribute</code> (path): The name of the attribute.</li> <li><code>decode</code> (query, optional): Set to None by default. If set to <code>XML</code>, <code>xml</code>, <code>XML_TEXT</code> or <code>xml_text</code>, the attributes containing ydoc data will be decoded to a readable format in an xml format. If set to <code>PLAIN</code>, <code>plain</code>, <code>PLAIN_TEXT</code> or <code>plain_text</code>, the attributes containing ydoc data will be decoded to a readable format in a plain text format. Else, the attributes will be returned in their original format.</li> <li><code>in_filter</code> (query, optional): A filter to include only specific attributes in the final results.</li> <li><code>out_filter</code> (query, optional): A filter to exclude specific attributes from the final results.</li> </ul> <p>Response:</p> <ul> <li><code>200 OK</code>: Returns user details.</li> <li><code>401 Unauthorized</code>: User not authorized.</li> <li><code>403 Forbidden</code>: User does not have permission to access the constellation.</li> <li><code>404 Not Found</code>: Constellation not found.</li> <li><code>500 Internal Server Error</code>: An error occurred while retrieving links.</li> </ul> <p>Response Example:</p> <pre><code>{\n\"success\": true,\n\"data\": [\n{\n\"attributes\": {\n\"node_uuid\": 1,\n\"title\": \"example_title\",\n\"content\": \"example_content\"\n},\n\"labels\": [\n\"Node\"\n]\n}\n],\n\"message\": \"Attribute deleted\"\n}\n</code></pre>"},{"location":"neo4j_api_endpoints/nodes/#add-an-attribute-to-a-node","title":"Add an attribute to a node","text":""},{"location":"neo4j_api_endpoints/nodes/#post-constellationconstellation_uuidnodenode_uuidattributeattribute","title":"POST <code>/constellation/{constellation_uuid}/node/{node_uuid}/attribute/{attribute}</code>","text":"<p>Description:</p> <p>Add an attribute to a node.</p> <p>Request Parameters:</p> <ul> <li><code>constellation_uuid</code> (path): The unique identifier of the constellation.</li> <li><code>node_uuid</code> (path): The unique identifier of the node.</li> <li><code>attribute</code> (path): The name of the attribute.</li> <li><code>decode</code> (query, optional): Set to None by default. If set to <code>XML</code>, <code>xml</code>, <code>XML_TEXT</code> or <code>xml_text</code>, the attributes containing ydoc data will be decoded to a readable format in an xml format. If set to <code>PLAIN</code>, <code>plain</code>, <code>PLAIN_TEXT</code> or <code>plain_text</code>, the attributes containing ydoc data will be decoded to a readable format in a plain text format. Else, the attributes will be returned in their original format.</li> <li><code>in_filter</code> (query, optional): A filter to include only specific attributes in the final results.</li> <li><code>out_filter</code> (query, optional): A filter to exclude specific attributes from the final results.</li> </ul> <p>Request Body:</p> <ul> <li><code>value</code> (body): The value to set for the attribute.</li> </ul> <pre><code>{\n\"value\": \"example_value\"\n}\n</code></pre> <p>Response:</p> <ul> <li><code>200 OK</code>: Returns user details.</li> <li><code>401 Unauthorized</code>: User not authorized.</li> <li><code>403 Forbidden</code>: User does not have permission to access the constellation.</li> <li><code>404 Not Found</code>: Constellation not found.</li> <li><code>500 Internal Server Error</code>: An error occurred while retrieving links.</li> </ul> <p>Response Example:</p> <pre><code>{\n\"success\": true,\n\"data\": [\n{\n\"attributes\": {\n\"node_uuid\": 1,\n\"title\": \"example_title\",\n\"content\": \"example_content\"\n},\n\"labels\": [\n\"Node\"\n]\n}\n],\n\"message\": \"Attribute added\"\n}\n</code></pre>"},{"location":"neo4j_api_endpoints/nodes/#get-all-nodes-with-a-specific-attribute","title":"Get all nodes with a specific attribute","text":""},{"location":"neo4j_api_endpoints/nodes/#get-constellationconstellation_uuidnodesattributeattribute","title":"GET <code>/constellation/{constellation_uuid}/nodes/attribute/{attribute}</code>","text":"<p>Description:</p> <p>Retrieve all nodes with a specific attribute key in the constellation.</p> <p>Request Parameters:</p> <ul> <li><code>constellation_uuid</code> (path): The unique identifier of the constellation.</li> <li><code>attribute</code> (path): The name of the attribute.</li> <li><code>decode</code> (query, optional): Set to None by default. If set to <code>XML</code>, <code>xml</code>, <code>XML_TEXT</code> or <code>xml_text</code>, the attributes containing ydoc data will be decoded to a readable format in an xml format. If set to <code>PLAIN</code>, <code>plain</code>, <code>PLAIN_TEXT</code> or <code>plain_text</code>, the attributes containing ydoc data will be decoded to a readable format in a plain text format. Else, the attributes will be returned in their original format.</li> <li><code>in_filter</code> (query, optional): A filter to include only specific attributes in the final results.</li> <li><code>out_filter</code> (query, optional): A filter to exclude specific attributes from the final results.</li> </ul> <p>Response:</p> <ul> <li><code>200 OK</code>: Returns user details.</li> <li><code>401 Unauthorized</code>: User not authorized.</li> <li><code>403 Forbidden</code>: User does not have permission to access the constellation.</li> <li><code>404 Not Found</code>: Constellation not found.</li> <li><code>500 Internal Server Error</code>: An error occurred while retrieving links.</li> </ul> <p>Response Example:</p> <pre><code>{\n\"success\": true,\n\"data\": [\n{\n\"attributes\": {\n\"node_uuid\": 1,\n\"title\": \"example_title\",\n\"content\": \"example_content\"\n},\n\"labels\": [\n\"Node\"\n]\n}\n],\n\"message\": \"Nodes retrieved\"\n}\n</code></pre>"},{"location":"neo4j_api_endpoints/nodes/#labels","title":"Labels","text":""},{"location":"neo4j_api_endpoints/nodes/#get-all-labels-in-the-constellation","title":"Get all labels in the constellation","text":""},{"location":"neo4j_api_endpoints/nodes/#get-constellationconstellation_uuidlabels","title":"GET <code>/constellation/{constellation_uuid}/labels</code>","text":"<p>Description:</p> <p>Retrieve all labels from every node in the constellation.</p> <p>Request Parameters:</p> <ul> <li><code>constellation_uuid</code> (path): The unique identifier of the constellation.</li> </ul> <p>Response:</p> <ul> <li><code>200 OK</code>: Returns user details.</li> <li><code>401 Unauthorized</code>: User not authorized.</li> <li><code>403 Forbidden</code>: User does not have permission to access the constellation.</li> <li><code>404 Not Found</code>: Constellation not found.</li> <li><code>500 Internal Server Error</code>: An error occurred while retrieving links.</li> </ul> <p>Response Example:</p> <pre><code>{\n\"success\": true,\n\"data\": [\n\"Node\",\n\"Person\",\n\"Movie\",\n\"Book\"\n],\n\"message\": \"Labels successfully retrieved\"\n}\n</code></pre>"},{"location":"neo4j_api_endpoints/nodes/#get-all-labels-of-a-node","title":"Get all labels of a node","text":""},{"location":"neo4j_api_endpoints/nodes/#get-constellationconstellation_uuidnodenode_uuidlabels","title":"GET <code>/constellation/{constellation_uuid}/node/{node_uuid}/labels</code>","text":"<p>Description:</p> <p>Retrieve all labels of a node.</p> <p>Request Parameters:</p> <ul> <li><code>constellation_uuid</code> (path): The unique identifier of the constellation.</li> <li><code>node_uuid</code> (path): The unique identifier of the node.</li> </ul> <p>Response:</p> <ul> <li><code>200 OK</code>: Returns user details.</li> <li><code>401 Unauthorized</code>: User not authorized.</li> <li><code>403 Forbidden</code>: User does not have permission to access the constellation.</li> <li><code>404 Not Found</code>: Constellation not found.</li> <li><code>500 Internal Server Error</code>: An error occurred while retrieving links.</li> </ul> <p>Response Example:</p> <pre><code>{\n\"success\": true,\n\"data\": [\n[\n\"Node\",\n\"Person\"\n]\n],\n\"message\": \"Labels successfully retrieved\"\n}\n</code></pre>"},{"location":"neo4j_api_endpoints/nodes/#remove-all-labels-from-a-node","title":"Remove all labels from a node","text":""},{"location":"neo4j_api_endpoints/nodes/#delete-constellationconstellation_uuidnodenode_uuidlabels","title":"DELETE <code>/constellation/{constellation_uuid}/node/{node_uuid}/labels</code>","text":"<p>Description:</p> <p>Remove all labels from a node.</p> <p>Request Parameters:</p> <ul> <li><code>constellation_uuid</code> (path): The unique identifier of the constellation.</li> <li><code>node_uuid</code> (path): The unique identifier of the node.</li> <li><code>decode</code> (query, optional): Set to None by default. If set to <code>XML</code>, <code>xml</code>, <code>XML_TEXT</code> or <code>xml_text</code>, the attributes containing ydoc data will be decoded to a readable format in an xml format. If set to <code>PLAIN</code>, <code>plain</code>, <code>PLAIN_TEXT</code> or <code>plain_text</code>, the attributes containing ydoc data will be decoded to a readable format in a plain text format. Else, the attributes will be returned in their original format.</li> <li><code>in_filter</code> (query, optional): A filter to include only specific attributes in the final results.</li> <li><code>out_filter</code> (query, optional): A filter to exclude specific attributes from the final results.</li> </ul> <p>Response:</p> <ul> <li><code>200 OK</code>: Returns user details.</li> <li><code>401 Unauthorized</code>: User not authorized.</li> <li><code>403 Forbidden</code>: User does not have permission to access the constellation.</li> <li><code>404 Not Found</code>: Constellation not found.</li> <li><code>500 Internal Server Error</code>: An error occurred while retrieving links.</li> </ul> <p>Response Example:</p> <pre><code>{\n\"success\": true,\n\"data\": [\n{\n\"attributes\": {\n\"node_uuid\": 1,\n\"title\": \"example_title\",\n\"content\": \"example_content\"\n},\n\"labels\": [\n\"Node\"\n]\n}\n],\n\"message\": \"All labels successfully removed\"\n}\n</code></pre>"},{"location":"neo4j_api_endpoints/nodes/#get-all-nodes-with-a-label","title":"Get all nodes with a label","text":""},{"location":"neo4j_api_endpoints/nodes/#get-constellationconstellation_uuidnodeslabellabel","title":"GET <code>/constellation/{constellation_uuid}/nodes/label/{label}</code>","text":"<p>Description:</p> <p>Retrieve all nodes with a specific label in the constellation.</p> <p>Request Parameters:</p> <ul> <li><code>constellation_uuid</code> (path): The unique identifier of the constellation.</li> <li><code>label</code> (path): The name of the label.</li> <li><code>decode</code> (query, optional): Set to None by default. If set to <code>XML</code>, <code>xml</code>, <code>XML_TEXT</code> or <code>xml_text</code>, the attributes containing ydoc data will be decoded to a readable format in an xml format. If set to <code>PLAIN</code>, <code>plain</code>, <code>PLAIN_TEXT</code> or <code>plain_text</code>, the attributes containing ydoc data will be decoded to a readable format in a plain text format. Else, the attributes will be returned in their original format.</li> <li><code>in_filter</code> (query, optional): A filter to include only specific attributes in the final results.</li> <li><code>out_filter</code> (query, optional): A filter to exclude specific attributes from the final results.</li> </ul> <p>Response:</p> <ul> <li><code>200 OK</code>: Returns user details.</li> <li><code>401 Unauthorized</code>: User not authorized.</li> <li><code>403 Forbidden</code>: User does not have permission to access the constellation.</li> <li><code>404 Not Found</code>: Constellation not found.</li> <li><code>500 Internal Server Error</code>: An error occurred while retrieving links.</li> </ul> <p>Response Example:</p> <pre><code>{\n\"success\": true,\n\"data\": [\n{\n\"attributes\": {\n\"node_uuid\": 1,\n\"title\": \"example_title\",\n\"content\": \"example_content\"\n},\n\"labels\": [\n\"Node\"\n]\n}\n],\n\"message\": \"Nodes successfully retrieved\"\n}\n</code></pre>"},{"location":"neo4j_api_endpoints/nodes/#add-a-label-to-a-node","title":"Add a label to a node","text":""},{"location":"neo4j_api_endpoints/nodes/#post-constellationconstellation_uuidnodenode_uuidlabellabel","title":"POST <code>/constellation/{constellation_uuid}/node/{node_uuid}/label/{label}</code>","text":"<p>Description:</p> <p>Add a label to a node.</p> <p>Request Parameters:</p> <ul> <li><code>constellation_uuid</code> (path): The unique identifier of the constellation.</li> <li><code>node_uuid</code> (path): The unique identifier of the node.</li> <li><code>label</code> (path): The name of the label to add.</li> <li><code>decode</code> (query, optional): Set to None by default. If set to <code>XML</code>, <code>xml</code>, <code>XML_TEXT</code> or <code>xml_text</code>, the attributes containing ydoc data will be decoded to a readable format in an xml format. If set to <code>PLAIN</code>, <code>plain</code>, <code>PLAIN_TEXT</code> or <code>plain_text</code>, the attributes containing ydoc data will be decoded to a readable format in a plain text format. Else, the attributes will be returned in their original format.</li> <li><code>in_filter</code> (query, optional): A filter to include only specific attributes in the final results.</li> <li><code>out_filter</code> (query, optional): A filter to exclude specific attributes from the final results.</li> </ul> <p>Response:</p> <ul> <li><code>200 OK</code>: Returns user details.</li> <li><code>401 Unauthorized</code>: User not authorized.</li> <li><code>403 Forbidden</code>: User does not have permission to access the constellation.</li> <li><code>404 Not Found</code>: Constellation not found.</li> <li><code>500 Internal Server Error</code>: An error occurred while retrieving links.</li> </ul> <p>Response Example:</p> <pre><code>{\n\"success\": true,\n\"data\": [\n{\n\"attributes\": {\n\"node_uuid\": 1,\n\"title\": \"example_title\",\n\"content\": \"example_content\"\n},\n\"labels\": [\n\"Node\"\n]\n}\n],\n\"message\": \"Label successfully added\"\n}\n</code></pre>"},{"location":"neo4j_api_endpoints/nodes/#remove-a-label-from-a-node","title":"Remove a label from a node","text":""},{"location":"neo4j_api_endpoints/nodes/#delete-constellationconstellation_uuidnodenode_uuidlabellabel","title":"DELETE <code>/constellation/{constellation_uuid}/node/{node_uuid}/label/{label}</code>","text":"<p>Description:</p> <p>Remove a label from a node.</p> <p>Request Parameters:</p> <ul> <li><code>constellation_uuid</code> (path): The unique identifier of the constellation.</li> <li><code>node_uuid</code> (path): The unique identifier of the node.</li> <li><code>label</code> (path): The name of the label to delete.</li> <li><code>decode</code> (query, optional): Set to None by default. If set to <code>XML</code>, <code>xml</code>, <code>XML_TEXT</code> or <code>xml_text</code>, the attributes containing ydoc data will be decoded to a readable format in an xml format. If set to <code>PLAIN</code>, <code>plain</code>, <code>PLAIN_TEXT</code> or <code>plain_text</code>, the attributes containing ydoc data will be decoded to a readable format in a plain text format. Else, the attributes will be returned in their original format.</li> <li><code>in_filter</code> (query, optional): A filter to include only specific attributes in the final results.</li> <li><code>out_filter</code> (query, optional): A filter to exclude specific attributes from the final results.</li> </ul> <p>Response:</p> <ul> <li><code>200 OK</code>: Returns user details.</li> <li><code>401 Unauthorized</code>: User not authorized.</li> <li><code>403 Forbidden</code>: User does not have permission to access the constellation.</li> <li><code>404 Not Found</code>: Constellation not found.</li> <li><code>500 Internal Server Error</code>: An error occurred while retrieving links.</li> </ul> <p>Response Example:</p> <pre><code>{\n\"success\": true,\n\"data\": [\n{\n\"attributes\": {\n\"node_uuid\": 1,\n\"title\": \"example_title\",\n\"content\": \"example_content\"\n},\n\"labels\": [\n\"Node\"\n]\n}\n],\n\"message\": \"Label successfully removed\"\n}\n</code></pre>"},{"location":"neo4j_api_endpoints/overview/","title":"Neo4j API Endpoints Overview","text":"<p>This document provides an overview of the API endpoints available in the Constellation project. Each endpoint is categorized based on its functionality. Click on the links to view detailed documentation for each category.</p>"},{"location":"neo4j_api_endpoints/overview/#default","title":"Default","text":""},{"location":"neo4j_api_endpoints/overview/#root","title":"Root","text":"<ul> <li>GET <code>/</code></li> <li>Root endpoint</li> </ul>"},{"location":"neo4j_api_endpoints/overview/#nodes","title":"Nodes","text":"<p>For detailed information about nodes-related endpoints, see the Node API documentation.</p>"},{"location":"neo4j_api_endpoints/overview/#links","title":"Links","text":"<p>For detailed information about links-related endpoints, see the Link API documentation.</p>"},{"location":"neo4j_api_endpoints/overview/#search","title":"Search","text":"<p>For detailed information about search-related endpoints, see the Search API documentation.</p>"},{"location":"neo4j_api_endpoints/overview/#debug","title":"Debug","text":"<p>For detailed information about debug-related endpoints, see the Debug API documentation.</p>"},{"location":"neo4j_api_endpoints/search/","title":"Node API","text":"<p>This document provides detailed information about the nodes-related API endpoints available in the Constellation project.</p>"},{"location":"neo4j_api_endpoints/search/#search-for-nodes","title":"Search for nodes","text":""},{"location":"neo4j_api_endpoints/search/#get-constellationconstellation_uuidsearchnodes","title":"GET <code>/constellation/{constellation_uuid}/search/nodes</code>","text":"<p>Description:</p> <p>Search for nodes in a constellation.</p> <p>Request Parameters:</p> <ul> <li><code>constellation_uuid</code> (path): The unique identifier of the constellation.</li> <li><code>search</code> (query): The search term to find nodes.</li> <li><code>in_filter</code> (query, optional): A filter to include only specific attributes in the final results.</li> <li><code>out_filter</code> (query, optional): A filter to exclude specific attributes from the final results.</li> <li><code>limit</code> (query, optional): The maximum number of results to return. Defaults to 100.</li> <li><code>page</code> (query, optional): The page number for pagination. Defaults to 1.</li> </ul> <p>Response:</p> <ul> <li><code>200 OK</code>: Returns matching nodes.</li> <li><code>401 Unauthorized</code>: User not authorized.</li> <li><code>403 Forbidden</code>: User does not have permission to access the constellation.</li> <li><code>404 Not Found</code>: Constellation not found.</li> <li><code>500 Internal Server Error</code>: An error occurred while retrieving nodes.</li> </ul> <p>Response Example:</p> <pre><code>{\n\"success\": true,\n\"data\":\n[\n{\n\"attributes\": {\n\"node_uuid\": \"0000-000000...\",\n\"title\": \"example_title\",\n\"content\": \"example_content\"\n},\n\"labels\": [\n\"Node\"\n],\n\"score\": {\n\"attributes\": {\n\"title\": 95,\n\"content\": 85\n},\n\"labels\": {\n\"Node\": 100\n}\n}\n}\n],\n\"message\": \"All matching nodes successfully returned\"\n}\n</code></pre>"},{"location":"neo4j_api_endpoints/search/#search-for-links","title":"Search for links","text":""},{"location":"neo4j_api_endpoints/search/#get-constellationconstellation_uuidsearchlinks","title":"GET <code>/constellation/{constellation_uuid}/search/links</code>","text":"<p>Description:</p> <p>Search for links in a constellation.</p> <p>Request Parameters:</p> <ul> <li><code>constellation_uuid</code> (path): The unique identifier of the constellation.</li> <li><code>search</code> (query): The search term to find links.</li> <li><code>in_filter</code> (query, optional): A filter to include only specific attributes in the final results.</li> <li><code>out_filter</code> (query, optional): A filter to exclude specific attributes from the final results.</li> <li><code>limit</code> (query, optional): The maximum number of results to return. Defaults to 100.</li> <li><code>page</code> (query, optional): The page number for pagination. Defaults to 1.</li> </ul> <p>Response:</p> <ul> <li><code>200 OK</code>: Returns matching links.</li> <li><code>401 Unauthorized</code>: User not authorized.</li> <li><code>403 Forbidden</code>: User does not have permission to access the constellation.</li> <li><code>404 Not Found</code>: Constellation not found.</li> <li><code>500 Internal Server Error</code>: An error occurred while retrieving links.</li> </ul> <p>Response Example:</p> <pre><code>{\n\"success\": true,\n\"data\":\n[\n{\n\"start_node\": \"0000-000000...\",\n\"end_node\": \"0000-000000...\",\n\"link_type\": \"string\",\n\"attributes\": {\n\"link_uuid\": \"0000-000000...\",\n\"title\": \"example_link_title\",\n\"content\": \"example_link_content\"\n},\n\"score\": {\n\"attributes\": {\n\"title\": 90,\n\"content\": 80\n},\n\"type\": {\n\"string\": 100\n}\n}\n}\n],\n\"message\": \"All matching links successfully returned\"\n}\n</code></pre>"},{"location":"postgres_api_endpoints/comments/","title":"Comments API","text":"<p>This document provides detailed information about the comment-related API endpoints available in the Constellation project.</p>"},{"location":"postgres_api_endpoints/comments/#authentication","title":"Authentication","text":"<p>All the next API requests require authentication using a JWT bearer token. You must include the token in the <code>Authorization</code> header of your requests.</p>"},{"location":"postgres_api_endpoints/comments/#example","title":"Example","text":"<p>To include the JWT token in your request headers, use the following format:</p> <pre><code>Authorization: Bearer &lt;your-jwt-token&gt;\n</code></pre>"},{"location":"postgres_api_endpoints/comments/#obtaining-a-jwt-token","title":"Obtaining a JWT Token","text":"<p>You can obtain a JWT token by logging in with your credentials. The token will be included in the response from the login endpoint.</p>"},{"location":"postgres_api_endpoints/comments/#example-request-with-jwt-token","title":"Example Request with JWT Token","text":"<p>Here is an example of how to include the JWT token in a request to the <code>/constellations</code> endpoint:</p> <pre><code>GET /constellations HTTP/1.1\nHost: api.example.com\nAuthorization: Bearer &lt;your-jwt-token&gt;\n</code></pre>"},{"location":"postgres_api_endpoints/comments/#create-a-new-comment","title":"Create a New Comment","text":""},{"location":"postgres_api_endpoints/comments/#post-filesfile_uuidcomments","title":"POST <code>/files/{file_uuid}/comments</code>","text":"<p>Create a new comment.</p> <p>Request Parameters: - <code>file_uuid</code> (path): The unique identifier of the file.</p> <p>Request Body: <pre><code>{\n\"content\": \"string\"\n}\n</code></pre></p> <p>Response: - <code>201 Created</code>: Comment successfully created. - <code>400 Bad Request</code>: Invalid input data.</p> <p>Response Example <pre><code>{\n\"comment_uuid\": \"0000-000000...\",\n\"content\": \"string\",\n\"file_uuid\": \"string\"\n}\n</code></pre></p>"},{"location":"postgres_api_endpoints/comments/#get-all-comments","title":"Get All Comments","text":""},{"location":"postgres_api_endpoints/comments/#get-filesfile_uuidcomments","title":"GET <code>/files/{file_uuid}/comments</code>","text":"<p>Retrieve all comments for a file.</p> <p>Request Parameters: - <code>file_uuid</code> (path): The unique identifier of the file.</p> <p>Response: - <code>200 OK</code>: Returns a list of comments. - <code>404 Not Found</code>: File not found.</p> <p>Response Example <pre><code>{\n\"comments\": [\n{\n\"comment_uuid\": \"0000-000000...\",\n\"content\": \"string\",\n\"file_uuid\": \"string\"\n}\n]\n}\n</code></pre></p>"},{"location":"postgres_api_endpoints/comments/#create-a-reply","title":"Create a Reply","text":""},{"location":"postgres_api_endpoints/comments/#post-filesfile_uuidcommentscomment_uuid","title":"POST <code>/files/{file_uuid}/comments/{comment_uuid}</code>","text":"<p>Create a reply to a comment.</p> <p>Request Parameters: - <code>file_uuid</code> (path): The unique identifier of the file. - <code>comment_uuid</code> (path): The unique identifier of the comment.</p> <p>Request Body: <pre><code>{\n\"content\": \"string\"\n}\n</code></pre></p> <p>Response: - <code>201 Created</code>: Reply successfully created. - <code>400 Bad Request</code>: Invalid input data. - <code>404 Not Found</code>: Comment not found.</p> <p>Response Example <pre><code>{\n\"reply_uuid\": \"0000-000000...\",\n\"content\": \"string\",\n\"comment_uuid\": \"string\"\n}\n</code></pre></p>"},{"location":"postgres_api_endpoints/comments/#delete-a-comment","title":"Delete a Comment","text":""},{"location":"postgres_api_endpoints/comments/#delete-filesfile_uuidcommentscomment_uuid","title":"DELETE <code>/files/{file_uuid}/comments/{comment_uuid}</code>","text":"<p>Delete a comment.</p> <p>Request Parameters: - <code>file_uuid</code> (path): The unique identifier of the file. - <code>comment_uuid</code> (path): The unique identifier of the comment.</p> <p>Response: - <code>200 OK</code>: Comment successfully deleted. - <code>404 Not Found</code>: Comment not found.</p> <p>Response Example <pre><code>{\n\"message\": \"Comment deleted\"\n}\n</code></pre></p>"},{"location":"postgres_api_endpoints/comments/#update-a-comment","title":"Update a Comment","text":""},{"location":"postgres_api_endpoints/comments/#put-filesfile_uuidcommentscomment_uuid","title":"PUT <code>/files/{file_uuid}/comments/{comment_uuid}</code>","text":"<p>Update a comment.</p> <p>Request Parameters: - <code>file_uuid</code> (path): The unique identifier of the file. - <code>comment_uuid</code> (path): The unique identifier of the comment.</p> <p>Request Body: <pre><code>{\n\"content\": \"string\"\n}\n</code></pre></p> <p>Response: - <code>200 OK</code>: Comment successfully updated. - <code>400 Bad Request</code>: Invalid input data. - <code>404 Not Found</code>: Comment not found.</p> <p>Response Example <pre><code>{\n\"comment_uuid\": \"0000-000000...\",\n\"content\": \"string\",\n\"file_uuid\": \"string\"\n}\n</code></pre></p>"},{"location":"postgres_api_endpoints/constellations/","title":"Constellations API","text":"<p>This document provides detailed information about the constellation-related API endpoints available in the Constellation project.</p>"},{"location":"postgres_api_endpoints/constellations/#authentication","title":"Authentication","text":"<p>All API requests require authentication using a JWT bearer token. You must include the token in the <code>Authorization</code> header of your requests.</p>"},{"location":"postgres_api_endpoints/constellations/#example","title":"Example","text":"<p>To include the JWT token in your request headers, use the following format:</p> <pre><code>Authorization: Bearer &lt;your-jwt-token&gt;\n</code></pre>"},{"location":"postgres_api_endpoints/constellations/#obtaining-a-jwt-token","title":"Obtaining a JWT Token","text":"<p>You can obtain a JWT token by logging in with your credentials. The token will be included in the response from the login endpoint.</p>"},{"location":"postgres_api_endpoints/constellations/#example-request-with-jwt-token","title":"Example Request with JWT Token","text":"<p>Here is an example of how to include the JWT token in a request to the <code>/constellations</code> endpoint:</p> <pre><code>GET /constellations HTTP/1.1\nHost: api.example.com\nAuthorization: Bearer &lt;your-jwt-token&gt;\n</code></pre>"},{"location":"postgres_api_endpoints/constellations/#get-all-constellations-linked-to-the-user","title":"Get All Constellations Linked to the User","text":""},{"location":"postgres_api_endpoints/constellations/#get-constellations","title":"GET <code>/constellations</code>","text":"<p>Retrieve all constellations linked to the user.</p> <p>Response: - <code>200 OK</code>: Returns a list of constellations.</p> <p>Response Example <pre><code>{\n\"constellation_uuid\": \"0000-000000...\",\n\"name\": \"string\"\n}\n</code></pre></p>"},{"location":"postgres_api_endpoints/constellations/#create-a-new-constellation","title":"Create a New Constellation","text":""},{"location":"postgres_api_endpoints/constellations/#post-constellations","title":"POST <code>/constellations</code>","text":"<p>Create a new constellation.</p> <p>[!NOTE]\\ You will have admin rights on the constellation you create.</p> <p>Request Body: <pre><code>{\n\"name\": \"string\"\n}\n</code></pre></p> <p>Response: - <code>201 Created</code>: Constellation successfully created. - <code>400 Bad Request</code>: Invalid input data.</p> <p>Response Example <pre><code>{\n\"constellation_uuid\": \"0000-000000...\",\n\"name\": \"string\"\n}\n</code></pre></p>"},{"location":"postgres_api_endpoints/constellations/#get-a-constellation-by-its-id","title":"Get a Constellation by its ID","text":""},{"location":"postgres_api_endpoints/constellations/#get-constellationsconstellation_uuid","title":"GET <code>/constellations/{constellation_uuid}</code>","text":"<p>Retrieve a constellation by its ID.</p> <p>Request Parameters: - <code>constellation_uuid</code> (path): The unique identifier of the constellation.</p> <p>Response: - <code>200 OK</code>: Returns constellation details. - <code>400 Invalid constellation UUID</code>: Invalid constellation UUID. - <code>404 Not Found</code>: Constellation not found.</p> <p>Response Example <pre><code>{\n\"root_folder_uuid\": \"0000-000000...\",\n\"name\": \"string\"\n}\n</code></pre></p>"},{"location":"postgres_api_endpoints/constellations/#update-a-constellations-name","title":"Update a Constellation's Name","text":""},{"location":"postgres_api_endpoints/constellations/#patch-constellationsconstellation_uuid","title":"PATCH <code>/constellations/{constellation_uuid}</code>","text":"<p>Update a constellation's name.</p> <p>[!NOTE]\\ You must have write rights on the constellation to update its name.</p> <p>Request Parameters: - <code>constellation_uuid</code> (path): The unique identifier of the constellation.</p> <p>Request Body: <pre><code>{\n\"name\": \"string\"\n}\n</code></pre></p> <p>Response: - <code>200 OK</code>: Constellation name successfully updated. - <code>400 Invalid constellation UUID</code>: Invalid constellation UUID. - <code>404 Not Found</code>: Constellation not found.</p> <p>Response Example <pre><code>{\n\"name\": \"string\"\n}\n</code></pre></p>"},{"location":"postgres_api_endpoints/constellations/#delete-a-constellation-by-its-id","title":"Delete a Constellation by its ID","text":""},{"location":"postgres_api_endpoints/constellations/#delete-constellationsconstellation_uuid","title":"DELETE <code>/constellations/{constellation_uuid}</code>","text":"<p>Delete a constellation by its ID.</p> <p>[!NOTE]\\ You must be an admin to access this endpoint</p> <p>Request Parameters: - <code>constellation_uuid</code> (path): The unique identifier of the constellation.</p> <p>Response: - <code>200 OK</code>: Constellation successfully deleted. - <code>400 Invalid constellation UUID</code>: Invalid constellation UUID. - <code>404 Not Found</code>: Constellation not found.</p> <p>Response Example <pre><code>{\n\"message\": \"Constellation deleted\"\n}\n</code></pre></p>"},{"location":"postgres_api_endpoints/constellations/#connect-a-user-to-a-constellation","title":"Connect a User to a Constellation","text":""},{"location":"postgres_api_endpoints/constellations/#post-constellationsconstellation_uuidconnect","title":"POST <code>/constellations/{constellation_uuid}/connect</code>","text":"<p>Connect a user to a constellation.</p> <p>[!NOTE]\\ You must have admin rights on the constellation to connect a user.</p> <p>Request Parameters: - <code>constellation_uuid</code> (path): The unique identifier of the constellation. - <code>user_uuid_to_connect</code>: The unique identifier of the user - <code>rights</code>: could be 'READ', 'COMMENT', 'WRITE' or 'ADMIN'</p> <p>Request Body: <pre><code>{\n\"user_uuid\": \"string\"\n}\n</code></pre></p> <p>Response: - <code>200 OK</code>: User successfully connected to the constellation. - <code>400 Bad Request</code>: Invalid input data. - <code>404 Not Found</code>: Constellation or user not found.</p> <p>Response Example <pre><code>{\n\"message\": \"User connected to constellation\"\n}\n</code></pre></p>"},{"location":"postgres_api_endpoints/constellations/#disconnect-a-user-from-a-constellation","title":"Disconnect a User from a Constellation","text":""},{"location":"postgres_api_endpoints/constellations/#post-constellationsconstellation_uuiddisconnect","title":"POST <code>/constellations/{constellation_uuid}/disconnect</code>","text":"<p>Disconnect a user from a constellation.</p> <p>[!NOTE]\\ You must have admin rights on the constellation to disconnect a user.</p> <p>Request Parameters: - <code>constellation_uuid</code> (path): The unique identifier of the constellation. - <code>user_uuid_to_disconnect</code>: The unique identifier of the user - <code>rights</code>: could be 'READ', 'COMMENT', 'WRITE' or 'ADMIN'</p> <p>Request Body: <pre><code>{\n\"user_uuid\": \"string\"\n}\n</code></pre></p> <p>Response: - <code>200 OK</code>: User successfully disconnected from the constellation. - <code>400 Bad Request</code>: Invalid input data. - <code>404 Not Found</code>: Constellation or user not found.</p> <p>Response Example <pre><code>{\n\"message\": \"User disconnected from constellation\"\n}\n</code></pre></p>"},{"location":"postgres_api_endpoints/constellations/#get-all-users-associated-with-a-constellation","title":"Get All Users Associated with a Constellation","text":""},{"location":"postgres_api_endpoints/constellations/#get-constellationsconstellation_uuidusers","title":"GET <code>/constellations/{constellation_uuid}/users</code>","text":"<p>Retrieve all users associated with a constellation.</p> <p>[!NOTE]\\ Everyone with at least read rights can access this endpoint.</p> <p>Request Parameters: - <code>constellation_uuid</code> (path): The unique identifier of the constellation.</p> <p>Response: - <code>200 OK</code>: Returns a list of users associated with the constellation. - <code>404 Not Found</code>: Constellation not found.</p> <p>Response Example <pre><code>[\n{\n\"uuid\": \"0000-000000...\",\n\"name\": \"string\",\n\"rights\": \"string\"\n}\n]\n</code></pre></p>"},{"location":"postgres_api_endpoints/constellations/#get-the-root-structure-of-a-constellation","title":"Get the Root Structure of a Constellation","text":""},{"location":"postgres_api_endpoints/constellations/#get-structureconstellation_uuid","title":"GET <code>/structure/{constellation_uuid}</code>","text":"<p>Retrieve the root structure of a constellation.</p> <p>Request Parameters: - <code>constellation_uuid</code> (path): The unique identifier of the constellation.</p> <p>Response: - <code>200 OK</code>: Returns the root structure of the constellation. - <code>404 Not Found</code>: Constellation not found.</p> <p>Response Example <pre><code>{\n\"uuid\": \"0000-000000...\",\n\"name\": \"string\",\n\"type\": \"folder\",\n\"children\": [\n{\n\"uuid\": \"0000-000000...\",\n\"name\": \"string\",\n\"type\": \"folder\",\n\"children\": [\n{\n\"uuid\": \"0000-000000...\",\n\"name\": \"string\",\n\"type\": \"file\"\n}\n]\n}\n]\n}\n</code></pre></p>"},{"location":"postgres_api_endpoints/debug/","title":"Debug API","text":"<p>This document provides detailed information about the debug-related API endpoints available in the Constellation project. All the debug endpoints are used for testing and debugging purposes only, and are available only in the development environment. As it's debug-related, it doesn't require authentication.</p>"},{"location":"postgres_api_endpoints/debug/#get-all-users","title":"Get All Users","text":""},{"location":"postgres_api_endpoints/debug/#get-users","title":"GET <code>/users</code>","text":"<p>Retrieve all users.</p> <p>Response: - <code>200 OK</code>: Returns a list of all users.</p> <p>Response Example <pre><code>{\n\"users\": [\n{\n\"user_uuid\": \"0000-000000...\",\n\"username\": \"string\",\n\"email\": \"string\"\n}\n]\n}\n</code></pre></p>"},{"location":"postgres_api_endpoints/debug/#get-all-files","title":"Get All Files","text":""},{"location":"postgres_api_endpoints/debug/#get-files","title":"GET <code>/files</code>","text":"<p>Retrieve all files.</p> <p>Response: - <code>200 OK</code>: Returns a list of all files.</p> <p>Response Example <pre><code>{\n\"files\": [\n{\n\"file_uuid\": \"0000-000000...\",\n\"name\": \"string\",\n\"content\": \"string\",\n\"folder_uuid\": \"string\"\n}\n]\n}\n</code></pre></p>"},{"location":"postgres_api_endpoints/debug/#get-all-constellations","title":"Get All Constellations","text":""},{"location":"postgres_api_endpoints/debug/#get-all_constellations","title":"GET <code>/all_constellations</code>","text":"<p>Retrieve all constellations.</p> <p>Response: - <code>200 OK</code>: Returns a list of all constellations.</p> <p>Response Example <pre><code>{\n\"constellations\": [\n{\n\"constellation_uuid\": \"0000-000000...\",\n\"name\": \"string\"\n}\n]\n}\n</code></pre></p>"},{"location":"postgres_api_endpoints/debug/#get-all-images","title":"Get All Images","text":""},{"location":"postgres_api_endpoints/debug/#get-all_images","title":"GET <code>/all_images</code>","text":"<p>Retrieve all images.</p> <p>Response: - <code>200 OK</code>: Returns a list of all images.</p> <p>Response Example <pre><code>{\n\"images\": [\n{\n\"image_uuid\": \"0000-000000...\",\n\"name\": \"string\",\n\"url\": \"string\"\n}\n]\n}\n</code></pre></p>"},{"location":"postgres_api_endpoints/debug/#get-all-comments","title":"Get All Comments","text":""},{"location":"postgres_api_endpoints/debug/#get-comments","title":"GET <code>/comments</code>","text":"<p>Retrieve all comments.</p> <p>Response: - <code>200 OK</code>: Returns a list of all comments.</p> <p>Response Example <pre><code>{\n\"comments\": [\n{\n\"comment_uuid\": \"0000-000000...\",\n\"content\": \"string\",\n\"file_uuid\": \"string\"\n}\n]\n}\n</code></pre></p>"},{"location":"postgres_api_endpoints/debug/#get-all-user-constellations","title":"Get All User Constellations","text":""},{"location":"postgres_api_endpoints/debug/#get-user_constellations","title":"GET <code>/user_constellations</code>","text":"<p>Retrieve all user constellations.</p> <p>Response: - <code>200 OK</code>: Returns a list of all user constellations.</p> <p>Response Example <pre><code>{\n\"user_constellations\": [\n{\n\"user_uuid\": \"0000-000000...\",\n\"constellation_uuid\": \"0000-000000...\"\n}\n]\n}\n</code></pre></p>"},{"location":"postgres_api_endpoints/debug/#test-the-access-token","title":"Test the Access Token","text":""},{"location":"postgres_api_endpoints/debug/#post-test-token","title":"POST <code>/test-token</code>","text":"<p>Test the access token.</p> <p>Request Body: <pre><code>{\n\"token\": \"string\"\n}\n</code></pre></p> <p>Response: - <code>200 OK</code>: Token is valid. - <code>401 Unauthorized</code>: Token is invalid.</p> <p>Response Example <pre><code>{\n\"message\": \"Token is valid\"\n}\n</code></pre></p>"},{"location":"postgres_api_endpoints/debug/#create-the-users-table","title":"Create the Users Table","text":""},{"location":"postgres_api_endpoints/debug/#get-create_table","title":"GET <code>/create_table</code>","text":"<p>Create the users table.</p> <p>Response: - <code>200 OK</code>: Users table successfully created.</p> <p>Response Example <pre><code>{\n\"message\": \"Users table created\"\n}\n</code></pre></p>"},{"location":"postgres_api_endpoints/debug/#delete-all-the-database","title":"Delete All the Database","text":""},{"location":"postgres_api_endpoints/debug/#get-delete_everything","title":"GET <code>/delete_everything</code>","text":"<p>Delete all the database.</p> <p>Response: - <code>200 OK</code>: Database successfully deleted.</p> <p>Response Example <pre><code>{\n\"message\": \"Database deleted\"\n}\n</code></pre></p>"},{"location":"postgres_api_endpoints/debug/#reset-the-database","title":"Reset the Database","text":""},{"location":"postgres_api_endpoints/debug/#get-reset","title":"GET <code>/reset</code>","text":"<p>Reset the database.</p> <p>Response: - <code>200 OK</code>: Database successfully reset.</p> <p>Response Example <pre><code>{\n\"message\": \"Database reset\"\n}\n</code></pre></p>"},{"location":"postgres_api_endpoints/debug/#populate-the-database","title":"Populate the Database","text":""},{"location":"postgres_api_endpoints/debug/#get-populate","title":"GET <code>/populate</code>","text":"<p>Populate the database.</p> <p>Response: - <code>200 OK</code>: Database successfully populated.</p> <p>Response Example <pre><code>{\n\"message\": \"Database populated\"\n}\n</code></pre></p>"},{"location":"postgres_api_endpoints/files/","title":"Files and Folders API","text":"<p>This document provides detailed information about the file and folder-related API endpoints available in the Constellation project.</p>"},{"location":"postgres_api_endpoints/files/#authentication","title":"Authentication","text":"<p>All API requests require authentication using a JWT bearer token. You must include the token in the <code>Authorization</code> header of your requests.</p>"},{"location":"postgres_api_endpoints/files/#example","title":"Example","text":"<p>To include the JWT token in your request headers, use the following format:</p> <pre><code>Authorization: Bearer &lt;your-jwt-token&gt;\n</code></pre>"},{"location":"postgres_api_endpoints/files/#obtaining-a-jwt-token","title":"Obtaining a JWT Token","text":"<p>You can obtain a JWT token by logging in with your credentials. The token will be included in the response from the login endpoint.</p>"},{"location":"postgres_api_endpoints/files/#example-request-with-jwt-token","title":"Example Request with JWT Token","text":"<p>Here is an example of how to include the JWT token in a request to the <code>/constellations</code> endpoint:</p> <pre><code>GET /constellations HTTP/1.1\nHost: api.example.com\nAuthorization: Bearer &lt;your-jwt-token&gt;\n</code></pre>"},{"location":"postgres_api_endpoints/files/#files","title":"Files","text":""},{"location":"postgres_api_endpoints/files/#create-a-new-file","title":"Create a New File","text":""},{"location":"postgres_api_endpoints/files/#post-files","title":"POST <code>/files</code>","text":"<p>Create a new file.</p> <p>Request Body: <pre><code>{\n\"name\": \"string\",\n\"content\": \"string\",\n\"folder_uuid\": \"string\"\n}\n</code></pre></p> <p>Response: - <code>201 Created</code>: File successfully created. - <code>400 Bad Request</code>: Invalid input data.</p> <p>Response Example <pre><code>{\n\"file_uuid\": \"0000-000000...\",\n\"name\": \"string\",\n\"content\": \"string\",\n\"folder_uuid\": \"string\"\n}\n</code></pre></p>"},{"location":"postgres_api_endpoints/files/#get-file-details","title":"Get File Details","text":""},{"location":"postgres_api_endpoints/files/#get-filesfile_uuid","title":"GET <code>/files/{file_uuid}</code>","text":"<p>Retrieve file details.</p> <p>Request Parameters: - <code>file_uuid</code> (path): The unique identifier of the file.</p> <p>Response: - <code>200 OK</code>: Returns file details. - <code>404 Not Found</code>: File not found.</p> <p>Response Example <pre><code>{\n\"file_uuid\": \"0000-000000...\",\n\"name\": \"string\",\n\"content\": \"string\",\n\"folder_uuid\": \"string\"\n}\n</code></pre></p>"},{"location":"postgres_api_endpoints/files/#update-a-file","title":"Update a File","text":""},{"location":"postgres_api_endpoints/files/#patch-filesfile_uuid","title":"PATCH <code>/files/{file_uuid}</code>","text":"<p>Update a file.</p> <p>Request Parameters: - <code>file_uuid</code> (path): The unique identifier of the file.</p> <p>Request Body: <pre><code>{\n\"name\": \"string\",\n\"content\": \"string\"\n}\n</code></pre></p> <p>Response: - <code>200 OK</code>: File successfully updated. - <code>400 Bad Request</code>: Invalid input data. - <code>404 Not Found</code>: File not found.</p> <p>Response Example <pre><code>{\n\"file_uuid\": \"0000-000000...\",\n\"name\": \"string\",\n\"content\": \"string\"\n}\n</code></pre></p>"},{"location":"postgres_api_endpoints/files/#delete-a-file","title":"Delete a File","text":""},{"location":"postgres_api_endpoints/files/#delete-filesfile_uuid","title":"DELETE <code>/files/{file_uuid}</code>","text":"<p>Delete a file.</p> <p>Request Parameters: - <code>file_uuid</code> (path): The unique identifier of the file.</p> <p>Response: - <code>200 OK</code>: File successfully deleted. - <code>404 Not Found</code>: File not found.</p> <p>Response Example <pre><code>{\n\"message\": \"File deleted\"\n}\n</code></pre></p>"},{"location":"postgres_api_endpoints/files/#folders","title":"Folders","text":""},{"location":"postgres_api_endpoints/files/#create-a-new-folder","title":"Create a New Folder","text":""},{"location":"postgres_api_endpoints/files/#post-folders","title":"POST <code>/folders</code>","text":"<p>Create a new folder.</p> <p>Request Body: <pre><code>{\n\"name\": \"string\",\n\"parent_folder_uuid\": \"string\"\n}\n</code></pre></p> <p>Response: - <code>201 Created</code>: Folder successfully created. - <code>400 Bad Request</code>: Invalid input data.</p> <p>Response Example <pre><code>{\n\"folder_uuid\": \"0000-000000...\",\n\"name\": \"string\",\n\"parent_folder_uuid\": \"string\"\n}\n</code></pre></p>"},{"location":"postgres_api_endpoints/files/#get-folder-details","title":"Get Folder Details","text":""},{"location":"postgres_api_endpoints/files/#get-foldersfolder_uuid","title":"GET <code>/folders/{folder_uuid}</code>","text":"<p>Retrieve folder details.</p> <p>Request Parameters: - <code>folder_uuid</code> (path): The unique identifier of the folder.</p> <p>Response: - <code>200 OK</code>: Returns folder details. - <code>404 Not Found</code>: Folder not found.</p> <p>Response Example <pre><code>{\n\"folder_uuid\": \"0000-000000...\",\n\"name\": \"string\",\n\"parent_folder_uuid\": \"string\"\n}\n</code></pre></p>"},{"location":"postgres_api_endpoints/files/#update-folder-details","title":"Update Folder Details","text":""},{"location":"postgres_api_endpoints/files/#patch-foldersfolder_uuid","title":"PATCH <code>/folders/{folder_uuid}</code>","text":"<p>Update folder details.</p> <p>Request Parameters: - <code>folder_uuid</code> (path): The unique identifier of the folder.</p> <p>Request Body: <pre><code>{\n\"name\": \"string\"\n}\n</code></pre></p> <p>Response: - <code>200 OK</code>: Folder details successfully updated. - <code>400 Bad Request</code>: Invalid input data. - <code>404 Not Found</code>: Folder not found.</p> <p>Response Example <pre><code>{\n\"folder_uuid\": \"0000-000000...\",\n\"name\": \"string\",\n\"parent_folder_uuid\": \"string\"\n}\n</code></pre></p>"},{"location":"postgres_api_endpoints/files/#delete-a-folder","title":"Delete a Folder","text":""},{"location":"postgres_api_endpoints/files/#delete-foldersfolder_uuid","title":"DELETE <code>/folders/{folder_uuid}</code>","text":"<p>Delete a folder.</p> <p>Request Parameters: - <code>folder_uuid</code> (path): The unique identifier of the folder.</p> <p>Response: - <code>200 OK</code>: Folder successfully deleted. - <code>404 Not Found</code>: Folder not found.</p> <p>Response Example <pre><code>{\n\"message\": \"Folder deleted\"\n}\n</code></pre></p>"},{"location":"postgres_api_endpoints/files/#get-files-in-a-folder","title":"Get Files in a Folder","text":""},{"location":"postgres_api_endpoints/files/#get-foldersfolder_uuidfiles","title":"GET <code>/folders/{folder_uuid}/files</code>","text":"<p>Retrieve files in a folder.</p> <p>Request Parameters: - <code>folder_uuid</code> (path): The unique identifier of the folder.</p> <p>Response: - <code>200 OK</code>: Returns a list of files in the folder. - <code>404 Not Found</code>: Folder not found.</p> <p>Response Example <pre><code>{\n\"files\": [\n{\n\"file_uuid\": \"0000-000000...\",\n\"name\": \"string\",\n\"content\": \"string\",\n\"folder_uuid\": \"string\"\n}\n]\n}\n</code></pre></p>"},{"location":"postgres_api_endpoints/images/","title":"Images API","text":"<p>This document provides detailed information about the image-related API endpoints available in the Constellation project.</p>"},{"location":"postgres_api_endpoints/images/#authentication","title":"Authentication","text":"<p>All API requests require authentication using a JWT bearer token. You must include the token in the <code>Authorization</code> header of your requests.</p>"},{"location":"postgres_api_endpoints/images/#example","title":"Example","text":"<p>To include the JWT token in your request headers, use the following format:</p> <pre><code>Authorization: Bearer &lt;your-jwt-token&gt;\n</code></pre>"},{"location":"postgres_api_endpoints/images/#obtaining-a-jwt-token","title":"Obtaining a JWT Token","text":"<p>You can obtain a JWT token by logging in with your credentials. The token will be included in the response from the login endpoint.</p>"},{"location":"postgres_api_endpoints/images/#example-request-with-jwt-token","title":"Example Request with JWT Token","text":"<p>Here is an example of how to include the JWT token in a request to the <code>/constellations</code> endpoint:</p> <pre><code>GET /constellations HTTP/1.1\nHost: api.example.com\nAuthorization: Bearer &lt;your-jwt-token&gt;\n</code></pre>"},{"location":"postgres_api_endpoints/images/#list-all-images","title":"List All Images","text":""},{"location":"postgres_api_endpoints/images/#get-images","title":"GET <code>/images</code>","text":"<p>Retrieve a list of all images.</p> <p>Response: - <code>200 OK</code>: Returns a list of images.</p> <p>Response Example <pre><code>{\n\"images\": [\n{\n\"image_uuid\": \"0000-000000...\",\n\"name\": \"string\",\n\"url\": \"string\"\n}\n]\n}\n</code></pre></p>"},{"location":"postgres_api_endpoints/images/#upload-a-new-image","title":"Upload a New Image","text":""},{"location":"postgres_api_endpoints/images/#post-images","title":"POST <code>/images</code>","text":"<p>Upload a new image.</p> <p>Request Body: <pre><code>{\n\"file\": \"binary\"\n}\n</code></pre></p> <p>Response: - <code>201 Created</code>: Image successfully uploaded. - <code>400 Bad Request</code>: Invalid input data.</p> <p>Response Example <pre><code>{\n\"uuid\": \"0000-000000...\",\n\"filename\": \"string\"\n}\n</code></pre></p>"},{"location":"postgres_api_endpoints/images/#get-an-image","title":"Get an Image","text":""},{"location":"postgres_api_endpoints/images/#get-imagesimage_uuid","title":"GET <code>/images/{image_uuid}</code>","text":"<p>Retrieve an image by its ID.</p> <p>Request Parameters: - <code>image_uuid</code> (path): The unique identifier of the image.</p> <p>Response: - <code>200 OK</code>: Returns image details. - <code>404 Not Found</code>: Image not found.</p> <p>Response Example <pre><code>{\n\"file\": \"binary\"\n}\n</code></pre></p>"},{"location":"postgres_api_endpoints/images/#rename-an-image","title":"Rename an Image","text":""},{"location":"postgres_api_endpoints/images/#patch-imagesimage_uuid","title":"PATCH <code>/images/{image_uuid}</code>","text":"<p>Rename an image.</p> <p>[!NOTE]\\ You must have write access to the image's constellation to rename it.</p> <p>Request Parameters: - <code>image_uuid</code> (path): The unique identifier of the image.</p> <p>Request Body: <pre><code>{\n\"name\": \"string\"\n}\n</code></pre></p> <p>Response: - <code>200 OK</code>: Image name successfully updated. - <code>400 Bad Request</code>: Invalid input data. - <code>404 Not Found</code>: Image not found.</p> <p>Response Example <pre><code>{\n\"image_uuid\": \"0000-000000...\",\n\"name\": \"string\",\n\"url\": \"string\"\n}\n</code></pre></p>"},{"location":"postgres_api_endpoints/images/#delete-an-image","title":"Delete an Image","text":""},{"location":"postgres_api_endpoints/images/#delete-imagesimage_uuid","title":"DELETE <code>/images/{image_uuid}</code>","text":"<p>Delete an image.</p> <p>[!NOTE]\\ You must have write access to the image's constellation to delete it.</p> <p>Request Parameters: - <code>image_uuid</code> (path): The unique identifier of the image.</p> <p>Response: - <code>200 OK</code>: Image successfully deleted. - <code>404 Not Found</code>: Image not found.</p> <p>Response Example <pre><code>{\n\"message\": \"Image deleted\"\n}\n</code></pre></p>"},{"location":"postgres_api_endpoints/overview/","title":"Postgres API Endpoints Overview","text":"<p>This document provides an overview of the Postgres API endpoints available in the Constellation project. Each endpoint is categorized based on its functionality. Click on the links to view detailed documentation for each category.</p>"},{"location":"postgres_api_endpoints/overview/#default","title":"Default","text":""},{"location":"postgres_api_endpoints/overview/#root","title":"Root","text":"<ul> <li>GET <code>/</code></li> <li>Root endpoint</li> </ul>"},{"location":"postgres_api_endpoints/overview/#register","title":"Register","text":"<ul> <li>POST <code>/register</code></li> <li>Register a new user</li> </ul>"},{"location":"postgres_api_endpoints/overview/#login","title":"Login","text":"<ul> <li>POST <code>/login</code></li> <li>Login a user</li> </ul>"},{"location":"postgres_api_endpoints/overview/#users","title":"Users","text":"<p>For detailed information about user-related endpoints, see the Users API documentation.</p>"},{"location":"postgres_api_endpoints/overview/#debug","title":"Debug","text":"<p>For detailed information about debug-related endpoints, see the Debug API documentation.</p>"},{"location":"postgres_api_endpoints/overview/#constellations","title":"Constellations","text":"<p>For detailed information about constellation-related endpoints, see the Constellations API documentation.</p>"},{"location":"postgres_api_endpoints/overview/#files","title":"Files","text":"<p>For detailed information about file-related endpoints, see the Files API documentation.</p>"},{"location":"postgres_api_endpoints/overview/#folders","title":"Folders","text":"<p>For detailed information about folder-related endpoints, see the Folders API documentation.</p>"},{"location":"postgres_api_endpoints/overview/#images","title":"Images","text":"<p>For detailed information about image-related endpoints, see the Images API documentation.</p>"},{"location":"postgres_api_endpoints/overview/#comments","title":"Comments","text":"<p>For detailed information about comment-related endpoints, see the Comments API documentation.</p>"},{"location":"postgres_api_endpoints/users/","title":"Users API","text":"<p>This document provides detailed information about the user-related API endpoints available in the Constellation project.</p>"},{"location":"postgres_api_endpoints/users/#register-a-new-user","title":"Register a New User","text":""},{"location":"postgres_api_endpoints/users/#post-register","title":"POST <code>/register</code>","text":"<p>Register a new user.</p> <p>Request Body: <pre><code>{\n\"name\": \"string\",\n\"password\": \"string\",\n\"email\": \"string\"\n}\n</code></pre></p> <p>Response: - <code>201 Created</code>: User successfully registered. - <code>400 Bad Request</code>: Invalid input data.</p> <p>Response Example <pre><code>{\n\"user_uuid\": \"0000-000000...\",\n\"access_token\": \"this_is_a_token\",\n\"token_type\": \"bearer\"\n}\n</code></pre></p>"},{"location":"postgres_api_endpoints/users/#login-a-user","title":"Login a User","text":""},{"location":"postgres_api_endpoints/users/#post-login","title":"POST <code>/login</code>","text":"<p>Login a user.</p> <p>Request Body: <pre><code>{\n\"name\": \"string\",\n\"password\": \"string\"\n}\n</code></pre></p> <p>Response: - <code>200 OK</code>: Login successful, returns JWT token. - <code>401 Unauthorized</code>: Invalid name or password.</p> <p>Response Example <pre><code>{\n\"access_token\": \"this_is_a_token\",\n\"token_type\": \"bearer\"\n}\n</code></pre></p>"},{"location":"postgres_api_endpoints/users/#authentication","title":"Authentication","text":"<p>All the next API requests require authentication using a JWT bearer token. You must include the token in the <code>Authorization</code> header of your requests.</p>"},{"location":"postgres_api_endpoints/users/#example","title":"Example","text":"<p>To include the JWT token in your request headers, use the following format:</p> <pre><code>Authorization: Bearer &lt;your-jwt-token&gt;\n</code></pre>"},{"location":"postgres_api_endpoints/users/#obtaining-a-jwt-token","title":"Obtaining a JWT Token","text":"<p>You can obtain a JWT token by logging in with your credentials. The token will be included in the response from the login endpoint.</p>"},{"location":"postgres_api_endpoints/users/#example-request-with-jwt-token","title":"Example Request with JWT Token","text":"<p>Here is an example of how to include the JWT token in a request to the <code>/constellations</code> endpoint:</p> <pre><code>GET /constellations HTTP/1.1\nHost: api.example.com\nAuthorization: Bearer &lt;your-jwt-token&gt;\n</code></pre>"},{"location":"postgres_api_endpoints/users/#check-token-and-constellation-access","title":"Check Token and Constellation Access","text":""},{"location":"postgres_api_endpoints/users/#post-check_tokenconstellation_uuid","title":"POST <code>/check_token/{constellation_uuid}</code>","text":"<p>Check JWT token and constellation access.</p> <p>Request Parameters: - <code>constellation_uuid</code> (path): The unique identifier of the constellation.</p> <p>Response: - <code>200 OK</code>: Token is valid and user has access. - <code>401 Unauthorized</code>: Token is invalid or user does not have access.</p> <p>Response Example <pre><code>{\n\"rights\": \"admin\"\n}\n</code></pre></p>"},{"location":"postgres_api_endpoints/users/#get-a-user-by-id","title":"Get a User by ID","text":""},{"location":"postgres_api_endpoints/users/#get-usersuser_uuid","title":"GET <code>/users/{user_uuid}</code>","text":"<p>Retrieve a user by their ID.</p> <p>Request Parameters: - <code>user_uuid</code> (path): The unique identifier of the user.</p> <p>Response: - <code>200 OK</code>: Returns user details. - <code>404 Not Found</code>: User not found.</p> <p>Response Example <pre><code>{\n\"uuid\": \"0000-000000...\",\n\"name\": \"string\",\n\"email\": \"string\"\n}\n</code></pre></p>"},{"location":"postgres_api_endpoints/users/#delete-a-user","title":"Delete a User","text":""},{"location":"postgres_api_endpoints/users/#delete-users","title":"DELETE <code>/users</code>","text":"<p>Delete a user.</p> <p>[!NOTE]\\ Of course, you can only delete your own user.</p> <p>Request Body: <pre><code>{\n\"user_uuid\": \"string\"\n}\n</code></pre></p> <p>Response: - <code>200 OK</code>: User successfully deleted. - <code>404 Not Found</code>: User not found.</p> <p>Response Example <pre><code>{\n\"message\": \"User deleted\"\n}\n</code></pre></p>"},{"location":"postgres_api_endpoints/users/#update-a-user","title":"Update a User","text":""},{"location":"postgres_api_endpoints/users/#patch-users","title":"PATCH <code>/users</code>","text":"<p>Update a user. You can update the name, email, password, or all of them, depending on the request body.</p> <p>[!NOTE]\\ Of course, you can only update your own user.</p> <p>Request Body: <pre><code>{\n\"uuid\": \"string\",\n\"name\": \"string\",\n\"email\": \"string\"\n}\n</code></pre></p> <p>Response: - <code>200 OK</code>: User successfully updated. - <code>400 Bad Request</code>: Invalid input data. - <code>404 Not Found</code>: User not found.</p> <p>Response Example <pre><code>{\n\"user_uuid\": \"0000-000000...\",\n\"access_token\": \"this_is_a_token\",\n}\n</code></pre></p>"},{"location":"testing/overview/","title":"Testing","text":""},{"location":"testing/overview/#github-actions","title":"GitHub Actions","text":"<p>...</p>"},{"location":"testing/overview/#run-tests-locally","title":"Run tests locally","text":"<pre><code>./tests/run_output.sh\n</code></pre>"}]}